{"ast":null,"code":"var _jsxFileName = \"D:\\\\benki\\\\Programming\\\\GitHub\\\\homelab-dashboard\\\\client\\\\homelab-dashboard\\\\src\\\\ResourceUsageBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Resource from \"./Resource\";\nimport * as systemConnector from \"./systemConnector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResourceUsageBar() {\n  _s();\n  console.log((Number(freeDiskSpace.responseText) / Number(totalDiskSpace.responseText) * 100).toFixed(2));\n  useEffect(() => {\n    // Function to be executed every second\n    const myFunction = () => {\n      console.log('This runs every second');\n      // Add your code here\n    };\n\n    // Set up the interval\n    const intervalId = setInterval(myFunction, 1000); // 1000 milliseconds = 1 second\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, []); // Empty dependency array ensures that the effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"resource-usage-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Resource, {\n      imgPath: \"#\",\n      usageMetric: `${cpuUtilizationPercent.responseText}%`,\n      resourceName: \"CPU\",\n      percent: cpuUtilizationPercent.responseText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      imgPath: \"#\",\n      usageMetric: `${memUtilizationPercent.responseText}%`,\n      resourceName: \"MEM\",\n      percent: memUtilizationPercent.responseText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      imgPath: \"#\",\n      usageMetric: `${systemConnector.formatBytes(freeDiskSpace.responseText)}`,\n      resourceName: \"Free\",\n      percent: (Number(freeDiskSpace.responseText) / Number(totalDiskSpace.responseText) * 100).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ResourceUsageBar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ResourceUsageBar;\nexport default ResourceUsageBar;\nvar _c;\n$RefreshReg$(_c, \"ResourceUsageBar\");","map":{"version":3,"names":["React","useState","useEffect","Resource","systemConnector","jsxDEV","_jsxDEV","ResourceUsageBar","_s","console","log","Number","freeDiskSpace","responseText","totalDiskSpace","toFixed","myFunction","intervalId","setInterval","clearInterval","id","children","imgPath","usageMetric","cpuUtilizationPercent","resourceName","percent","fileName","_jsxFileName","lineNumber","columnNumber","memUtilizationPercent","formatBytes","_c","$RefreshReg$"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/src/ResourceUsageBar.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport Resource from \"./Resource\";\r\nimport * as systemConnector from \"./systemConnector\";\r\n\r\nfunction ResourceUsageBar() {\r\n  console.log((Number(freeDiskSpace.responseText) / Number(totalDiskSpace.responseText) * 100).toFixed(2));\r\n    \r\n  useEffect(() => {\r\n    // Function to be executed every second\r\n    const myFunction = () => {\r\n      console.log('This runs every second');\r\n      // Add your code here\r\n    };\r\n\r\n    // Set up the interval\r\n    const intervalId = setInterval(myFunction, 1000); // 1000 milliseconds = 1 second\r\n\r\n    // Clean up the interval when the component unmounts\r\n    return () => clearInterval(intervalId);\r\n  }, []); // Empty dependency array ensures that the effect runs only once\r\n  \r\n  return (\r\n    <div id=\"resource-usage-bar\">\r\n        <Resource \r\n        imgPath={\"#\"}\r\n        usageMetric={`${cpuUtilizationPercent.responseText}%`}\r\n        resourceName={\"CPU\"}\r\n        percent={cpuUtilizationPercent.responseText}\r\n      />\r\n\r\n      <Resource \r\n        imgPath={\"#\"}\r\n        usageMetric={`${memUtilizationPercent.responseText}%`}\r\n        resourceName={\"MEM\"}\r\n        percent={memUtilizationPercent.responseText}\r\n      />\r\n\r\n      <Resource \r\n        imgPath={\"#\"}\r\n        usageMetric={`${systemConnector.formatBytes(freeDiskSpace.responseText)}`}\r\n        resourceName={\"Free\"}\r\n        percent={(Number(freeDiskSpace.responseText) / Number(totalDiskSpace.responseText) * 100).toFixed(2)}\r\n      />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ResourceUsageBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,KAAKC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1BC,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,CAACC,aAAa,CAACC,YAAY,CAAC,GAAGF,MAAM,CAACG,cAAc,CAACD,YAAY,CAAC,GAAG,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;EAExGb,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,UAAU,GAAGA,CAAA,KAAM;MACvBP,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC;IACF,CAAC;;IAED;IACA,MAAMO,UAAU,GAAGC,WAAW,CAACF,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;;IAElD;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAKc,EAAE,EAAC,oBAAoB;IAAAC,QAAA,gBACxBf,OAAA,CAACH,QAAQ;MACTmB,OAAO,EAAE,GAAI;MACbC,WAAW,EAAG,GAAEC,qBAAqB,CAACX,YAAa,GAAG;MACtDY,YAAY,EAAE,KAAM;MACpBC,OAAO,EAAEF,qBAAqB,CAACX;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAEFxB,OAAA,CAACH,QAAQ;MACPmB,OAAO,EAAE,GAAI;MACbC,WAAW,EAAG,GAAEQ,qBAAqB,CAAClB,YAAa,GAAG;MACtDY,YAAY,EAAE,KAAM;MACpBC,OAAO,EAAEK,qBAAqB,CAAClB;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAEFxB,OAAA,CAACH,QAAQ;MACPmB,OAAO,EAAE,GAAI;MACbC,WAAW,EAAG,GAAEnB,eAAe,CAAC4B,WAAW,CAACpB,aAAa,CAACC,YAAY,CAAE,EAAE;MAC1EY,YAAY,EAAE,MAAO;MACrBC,OAAO,EAAE,CAACf,MAAM,CAACC,aAAa,CAACC,YAAY,CAAC,GAAGF,MAAM,CAACG,cAAc,CAACD,YAAY,CAAC,GAAG,GAAG,EAAEE,OAAO,CAAC,CAAC;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGV;AAACtB,EAAA,CA1CQD,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AA4CzB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}