{"ast":null,"code":"\"use strict\";\n\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst {\n  Writable\n} = require(\"stream\");\nconst zlib = require(\"zlib\");\nconst ver = process.version.replace(\"v\", \"\").split(\".\");\nconst majorNodeVersion = Number.parseInt(ver[0]);\nfunction abortRequest(clientRequest) {\n  // clientRequest.destroy breaks the test suite for versions 10 and 12,\n  // hence the version check\n  if (majorNodeVersion > 13) {\n    clientRequest.destroy();\n  } else {\n    clientRequest.abort();\n  }\n  clientRequest.removeAllListeners();\n  clientRequest.on(\"error\", () => {});\n}\nmodule.exports = class Request extends Writable {\n  constructor(url, clientOptions, requestOptions) {\n    super();\n    Object.assign(this, clientOptions);\n    this.currentURL = url;\n    this._requestOptions = requestOptions;\n    this.headers = requestOptions.headers;\n    this._ended = false;\n    this._redirectCount = 0;\n    this._requestBodyBuffers = [];\n    this._bufferIndex = 0;\n    this._performRequest();\n  }\n  abort() {\n    abortRequest(this._currentRequest);\n    this.emit(\"abort\");\n    this.removeAllListeners();\n  }\n  pipeRequest(form) {\n    form.pipe(this._currentRequest);\n  }\n  write(data, encoding) {\n    if (data.length > 0) {\n      this._requestBodyBuffers.push({\n        data,\n        encoding\n      });\n      this._currentRequest.write(data, encoding);\n    }\n  }\n  end() {\n    this.emit(\"request\", this._currentRequest);\n    this._ended = true;\n    this._currentRequest.end();\n  }\n  setHeader(name, value) {\n    this.headers[name] = value;\n    this._currentRequest.setHeader(name, value);\n  }\n  removeHeader(name) {\n    delete this.headers[name];\n    this._currentRequest.removeHeader(name);\n  }\n\n  // Without this method, the test send-redirect-infinite-sync will halt the test suite\n  // TODO: investigate this further and ideally remove\n  toJSON() {\n    const {\n      method,\n      headers\n    } = this._requestOptions;\n    return {\n      uri: new URL(this.currentURL),\n      method,\n      headers\n    };\n  }\n  _writeNext(error) {\n    if (this._currentRequest) {\n      if (error) {\n        this.emit(\"error\", error);\n      } else if (this._bufferIndex < this._requestBodyBuffers.length) {\n        const buffer = this._requestBodyBuffers[this._bufferIndex++];\n        if (!this._currentRequest.writableEnded) {\n          this._currentRequest.write(buffer.data, buffer.encoding, this._writeNext.bind(this));\n        }\n      } else if (this._ended) {\n        this._currentRequest.end();\n      }\n    }\n  }\n  _performRequest() {\n    const urlOptions = new URL(this.currentURL);\n    const scheme = urlOptions.protocol;\n    this._requestOptions.agent = this.agents[scheme.substring(0, scheme.length - 1)];\n    const {\n      request\n    } = scheme === \"https:\" ? https : http;\n    this._currentRequest = request(this.currentURL, this._requestOptions, response => {\n      this._processResponse(response);\n    });\n    let cookies;\n    if (this._redirectCount === 0) {\n      this.originalCookieHeader = this.getHeader(\"Cookie\");\n    }\n    if (this.cookieJar) {\n      cookies = this.cookieJar.getCookieStringSync(this.currentURL);\n    }\n    if (cookies && cookies.length) {\n      if (this.originalCookieHeader) {\n        this.setHeader(\"Cookie\", this.originalCookieHeader + \"; \" + cookies);\n      } else {\n        this.setHeader(\"Cookie\", cookies);\n      }\n    }\n    for (const event of [\"connect\", \"error\", \"socket\", \"timeout\"]) {\n      this._currentRequest.on(event, (...args) => {\n        this.emit(event, ...args);\n      });\n    }\n    if (this._isRedirect) {\n      this._bufferIndex = 0;\n      this._writeNext();\n    }\n  }\n  _processResponse(response) {\n    const cookies = response.headers[\"set-cookie\"];\n    if (this.cookieJar && Array.isArray(cookies)) {\n      try {\n        cookies.forEach(cookie => {\n          this.cookieJar.setCookieSync(cookie, this.currentURL, {\n            ignoreError: true\n          });\n        });\n      } catch (e) {\n        this.emit(\"error\", e);\n      }\n    }\n    const {\n      statusCode\n    } = response;\n    const {\n      location\n    } = response.headers;\n    // In Node v15, aborting a message with remaining data causes an error to be thrown,\n    // hence the version check\n    const catchResErrors = err => {\n      if (!(majorNodeVersion >= 15 && err.message === \"aborted\")) {\n        this.emit(\"error\", err);\n      }\n    };\n    response.on(\"error\", catchResErrors);\n    let redirectAddress = null;\n    let resendWithAuth = false;\n    if (typeof location === \"string\" && location.length && this.followRedirects && statusCode >= 300 && statusCode < 400) {\n      redirectAddress = location;\n    } else if (statusCode === 401 && /^Basic /i.test(response.headers[\"www-authenticate\"] || \"\") && this.user && this.user.length) {\n      this._requestOptions.auth = `${this.user}:${this.pass}`;\n      resendWithAuth = true;\n    }\n    if (redirectAddress || resendWithAuth) {\n      if (++this._redirectCount > 21) {\n        const redirectError = new Error(\"Maximum number of redirects exceeded\");\n        redirectError.code = \"ERR_TOO_MANY_REDIRECTS\";\n        this.emit(\"error\", redirectError);\n        return;\n      }\n      abortRequest(this._currentRequest);\n      response.destroy();\n      this._isRedirect = true;\n      if ((statusCode === 301 || statusCode === 302) && this._requestOptions.method === \"POST\" || statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._requestOptions.method)) {\n        this._requestOptions.method = \"GET\";\n        this._requestBodyBuffers = [];\n      }\n      let previousHostName = this._removeMatchingHeaders(/^host$/i);\n      if (!previousHostName) {\n        previousHostName = new URL(this.currentURL).hostname;\n      }\n      const previousURL = this.currentURL;\n      if (!resendWithAuth) {\n        const nextURL = redirectAddress.startsWith(\"https:\") ? new URL(redirectAddress) : new URL(redirectAddress, this.currentURL);\n        if (nextURL.hostname !== previousHostName) {\n          this._removeMatchingHeaders(/^authorization$/i);\n        }\n        this.currentURL = nextURL.toString();\n      }\n      this.headers.Referer = previousURL;\n      this.emit(\"redirect\", response, this.headers, this.currentURL);\n      try {\n        this._performRequest();\n      } catch (cause) {\n        this.emit(\"error\", cause);\n      }\n    } else {\n      let pipeline = response;\n      const acceptEncoding = this.headers[\"Accept-Encoding\"];\n      const requestCompressed = typeof acceptEncoding === \"string\" && (acceptEncoding.includes(\"gzip\") || acceptEncoding.includes(\"deflate\"));\n      if (requestCompressed && this._requestOptions.method !== \"HEAD\" && statusCode >= 200 && statusCode !== 204 && statusCode !== 304) {\n        const zlibOptions = {\n          flush: zlib.constants.Z_SYNC_FLUSH,\n          finishFlush: zlib.constants.Z_SYNC_FLUSH\n        };\n        const contentEncoding = (response.headers[\"content-encoding\"] || \"identity\").trim().toLowerCase();\n        if (contentEncoding === \"gzip\") {\n          pipeline = zlib.createGunzip(zlibOptions);\n          response.pipe(pipeline);\n        } else if (contentEncoding === \"deflate\") {\n          pipeline = zlib.createInflate(zlibOptions);\n          response.pipe(pipeline);\n        }\n      }\n      pipeline.removeAllListeners(\"error\");\n      this.emit(\"response\", response, this.currentURL);\n      pipeline.on(\"data\", bytes => this.emit(\"data\", bytes));\n      pipeline.once(\"end\", bytes => this.emit(\"end\", bytes));\n      pipeline.on(\"error\", catchResErrors);\n      pipeline.on(\"close\", () => this.emit(\"close\"));\n      this._requestBodyBuffers = [];\n    }\n  }\n  getHeader(key, value) {\n    if (this._currentRequest) {\n      return this._currentRequest.getHeader(key, value);\n    }\n    return null;\n  }\n  _removeMatchingHeaders(regex) {\n    let lastValue;\n    for (const header in this.headers) {\n      if (regex.test(header)) {\n        lastValue = this.headers[header];\n        delete this.headers[header];\n      }\n    }\n    return lastValue;\n  }\n};","map":{"version":3,"names":["http","require","https","Writable","zlib","ver","process","version","replace","split","majorNodeVersion","Number","parseInt","abortRequest","clientRequest","destroy","abort","removeAllListeners","on","module","exports","Request","constructor","url","clientOptions","requestOptions","Object","assign","currentURL","_requestOptions","headers","_ended","_redirectCount","_requestBodyBuffers","_bufferIndex","_performRequest","_currentRequest","emit","pipeRequest","form","pipe","write","data","encoding","length","push","end","setHeader","name","value","removeHeader","toJSON","method","uri","URL","_writeNext","error","buffer","writableEnded","bind","urlOptions","scheme","protocol","agent","agents","substring","request","response","_processResponse","cookies","originalCookieHeader","getHeader","cookieJar","getCookieStringSync","event","args","_isRedirect","Array","isArray","forEach","cookie","setCookieSync","ignoreError","e","statusCode","location","catchResErrors","err","message","redirectAddress","resendWithAuth","followRedirects","test","user","auth","pass","redirectError","Error","code","previousHostName","_removeMatchingHeaders","hostname","previousURL","nextURL","startsWith","toString","Referer","cause","pipeline","acceptEncoding","requestCompressed","includes","zlibOptions","flush","constants","Z_SYNC_FLUSH","finishFlush","contentEncoding","trim","toLowerCase","createGunzip","createInflate","bytes","once","key","regex","lastValue","header"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/jsdom/lib/jsdom/living/helpers/http-request.js"],"sourcesContent":["\"use strict\";\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst { Writable } = require(\"stream\");\nconst zlib = require(\"zlib\");\n\nconst ver = process.version.replace(\"v\", \"\").split(\".\");\nconst majorNodeVersion = Number.parseInt(ver[0]);\n\nfunction abortRequest(clientRequest) {\n  // clientRequest.destroy breaks the test suite for versions 10 and 12,\n  // hence the version check\n  if (majorNodeVersion > 13) {\n    clientRequest.destroy();\n  } else {\n    clientRequest.abort();\n  }\n  clientRequest.removeAllListeners();\n  clientRequest.on(\"error\", () => {});\n}\n\nmodule.exports = class Request extends Writable {\n  constructor(url, clientOptions, requestOptions) {\n    super();\n    Object.assign(this, clientOptions);\n    this.currentURL = url;\n    this._requestOptions = requestOptions;\n    this.headers = requestOptions.headers;\n    this._ended = false;\n    this._redirectCount = 0;\n    this._requestBodyBuffers = [];\n    this._bufferIndex = 0;\n    this._performRequest();\n  }\n\n  abort() {\n    abortRequest(this._currentRequest);\n    this.emit(\"abort\");\n    this.removeAllListeners();\n  }\n\n  pipeRequest(form) {\n    form.pipe(this._currentRequest);\n  }\n\n  write(data, encoding) {\n    if (data.length > 0) {\n      this._requestBodyBuffers.push({ data, encoding });\n      this._currentRequest.write(data, encoding);\n    }\n  }\n\n  end() {\n    this.emit(\"request\", this._currentRequest);\n    this._ended = true;\n    this._currentRequest.end();\n  }\n\n  setHeader(name, value) {\n    this.headers[name] = value;\n    this._currentRequest.setHeader(name, value);\n  }\n\n  removeHeader(name) {\n    delete this.headers[name];\n    this._currentRequest.removeHeader(name);\n  }\n\n  // Without this method, the test send-redirect-infinite-sync will halt the test suite\n  // TODO: investigate this further and ideally remove\n  toJSON() {\n    const { method, headers } = this._requestOptions;\n    return { uri: new URL(this.currentURL), method, headers };\n  }\n\n  _writeNext(error) {\n    if (this._currentRequest) {\n      if (error) {\n        this.emit(\"error\", error);\n      } else if (this._bufferIndex < this._requestBodyBuffers.length) {\n        const buffer = this._requestBodyBuffers[this._bufferIndex++];\n        if (!this._currentRequest.writableEnded) {\n          this._currentRequest.write(\n            buffer.data,\n            buffer.encoding,\n            this._writeNext.bind(this)\n          );\n        }\n      } else if (this._ended) {\n        this._currentRequest.end();\n      }\n    }\n  }\n\n  _performRequest() {\n    const urlOptions = new URL(this.currentURL);\n    const scheme = urlOptions.protocol;\n    this._requestOptions.agent = this.agents[scheme.substring(0, scheme.length - 1)];\n    const { request } = scheme === \"https:\" ? https : http;\n    this._currentRequest = request(this.currentURL, this._requestOptions, response => {\n      this._processResponse(response);\n    });\n\n    let cookies;\n    if (this._redirectCount === 0) {\n      this.originalCookieHeader = this.getHeader(\"Cookie\");\n    }\n    if (this.cookieJar) {\n      cookies = this.cookieJar.getCookieStringSync(this.currentURL);\n    }\n    if (cookies && cookies.length) {\n      if (this.originalCookieHeader) {\n        this.setHeader(\"Cookie\", this.originalCookieHeader + \"; \" + cookies);\n      } else {\n        this.setHeader(\"Cookie\", cookies);\n      }\n    }\n\n    for (const event of [\"connect\", \"error\", \"socket\", \"timeout\"]) {\n      this._currentRequest.on(event, (...args) => {\n        this.emit(event, ...args);\n      });\n    }\n    if (this._isRedirect) {\n      this._bufferIndex = 0;\n      this._writeNext();\n    }\n  }\n\n  _processResponse(response) {\n    const cookies = response.headers[\"set-cookie\"];\n    if (this.cookieJar && Array.isArray(cookies)) {\n      try {\n        cookies.forEach(cookie => {\n          this.cookieJar.setCookieSync(cookie, this.currentURL, { ignoreError: true });\n        });\n      } catch (e) {\n        this.emit(\"error\", e);\n      }\n    }\n\n    const { statusCode } = response;\n    const { location } = response.headers;\n    // In Node v15, aborting a message with remaining data causes an error to be thrown,\n    // hence the version check\n    const catchResErrors = err => {\n      if (!(majorNodeVersion >= 15 && err.message === \"aborted\")) {\n        this.emit(\"error\", err);\n      }\n    };\n    response.on(\"error\", catchResErrors);\n    let redirectAddress = null;\n    let resendWithAuth = false;\n    if (typeof location === \"string\" &&\n      location.length &&\n      this.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400) {\n      redirectAddress = location;\n    } else if (statusCode === 401 &&\n      /^Basic /i.test(response.headers[\"www-authenticate\"] || \"\") &&\n      (this.user && this.user.length)) {\n      this._requestOptions.auth = `${this.user}:${this.pass}`;\n      resendWithAuth = true;\n    }\n    if (redirectAddress || resendWithAuth) {\n      if (++this._redirectCount > 21) {\n        const redirectError = new Error(\"Maximum number of redirects exceeded\");\n        redirectError.code = \"ERR_TOO_MANY_REDIRECTS\";\n        this.emit(\"error\", redirectError);\n        return;\n      }\n      abortRequest(this._currentRequest);\n      response.destroy();\n      this._isRedirect = true;\n      if (((statusCode === 301 || statusCode === 302) && this._requestOptions.method === \"POST\") ||\n        (statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._requestOptions.method))) {\n        this._requestOptions.method = \"GET\";\n        this._requestBodyBuffers = [];\n      }\n      let previousHostName = this._removeMatchingHeaders(/^host$/i);\n      if (!previousHostName) {\n        previousHostName = new URL(this.currentURL).hostname;\n      }\n      const previousURL = this.currentURL;\n      if (!resendWithAuth) {\n        const nextURL = redirectAddress.startsWith(\"https:\") ?\n          new URL(redirectAddress) :\n          new URL(redirectAddress, this.currentURL);\n        if (nextURL.hostname !== previousHostName) {\n          this._removeMatchingHeaders(/^authorization$/i);\n        }\n        this.currentURL = nextURL.toString();\n      }\n      this.headers.Referer = previousURL;\n      this.emit(\"redirect\", response, this.headers, this.currentURL);\n      try {\n        this._performRequest();\n      } catch (cause) {\n        this.emit(\"error\", cause);\n      }\n    } else {\n      let pipeline = response;\n      const acceptEncoding = this.headers[\"Accept-Encoding\"];\n      const requestCompressed = typeof acceptEncoding === \"string\" &&\n        (acceptEncoding.includes(\"gzip\") || acceptEncoding.includes(\"deflate\"));\n      if (\n        requestCompressed &&\n        this._requestOptions.method !== \"HEAD\" &&\n        statusCode >= 200 &&\n        statusCode !== 204 &&\n        statusCode !== 304\n      ) {\n        const zlibOptions = {\n          flush: zlib.constants.Z_SYNC_FLUSH,\n          finishFlush: zlib.constants.Z_SYNC_FLUSH\n        };\n        const contentEncoding = (response.headers[\"content-encoding\"] || \"identity\").trim().toLowerCase();\n        if (contentEncoding === \"gzip\") {\n          pipeline = zlib.createGunzip(zlibOptions);\n          response.pipe(pipeline);\n        } else if (contentEncoding === \"deflate\") {\n          pipeline = zlib.createInflate(zlibOptions);\n          response.pipe(pipeline);\n        }\n      }\n      pipeline.removeAllListeners(\"error\");\n      this.emit(\"response\", response, this.currentURL);\n      pipeline.on(\"data\", bytes => this.emit(\"data\", bytes));\n      pipeline.once(\"end\", bytes => this.emit(\"end\", bytes));\n      pipeline.on(\"error\", catchResErrors);\n      pipeline.on(\"close\", () => this.emit(\"close\"));\n      this._requestBodyBuffers = [];\n    }\n  }\n\n  getHeader(key, value) {\n    if (this._currentRequest) {\n      return this._currentRequest.getHeader(key, value);\n    }\n    return null;\n  }\n\n  _removeMatchingHeaders(regex) {\n    let lastValue;\n    for (const header in this.headers) {\n      if (regex.test(header)) {\n        lastValue = this.headers[header];\n        delete this.headers[header];\n      }\n    }\n    return lastValue;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}