{"ast":null,"code":"\"use strict\";\n\nconst MIMEType = require(\"whatwg-mimetype\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst {\n  parseURL,\n  serializeURL\n} = require(\"whatwg-url\");\nconst sniffHTMLEncoding = require(\"html-encoding-sniffer\");\nconst window = require(\"../../browser/Window\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst {\n  evaluateJavaScriptURL\n} = require(\"../window/navigation\");\nconst {\n  parseIntoDocument\n} = require(\"../../browser/parser\");\nconst {\n  documentBaseURL\n} = require(\"../helpers/document-base-url\");\nconst {\n  fireAnEvent\n} = require(\"../helpers/events\");\nconst {\n  getAttributeValue\n} = require(\"../attributes\");\nconst idlUtils = require(\"../generated/utils\");\nfunction fireLoadEvent(document, frame, attaching) {\n  if (attaching) {\n    fireAnEvent(\"load\", frame);\n    return;\n  }\n  const dummyPromise = Promise.resolve();\n  function onLoad() {\n    fireAnEvent(\"load\", frame);\n  }\n  document._queue.push(dummyPromise, onLoad);\n}\nfunction fetchFrame(serializedURL, frame, document, contentDoc) {\n  const resourceLoader = document._resourceLoader;\n  let request;\n  function onFrameLoaded(data) {\n    const sniffOptions = {\n      defaultEncoding: document._encoding\n    };\n    if (request.response) {\n      const contentType = MIMEType.parse(request.response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n      sniffOptions.transportLayerEncodingLabel = contentType.parameters.get(\"charset\");\n      if (contentType) {\n        if (contentType.isXML()) {\n          contentDoc._parsingMode = \"xml\";\n        }\n        contentDoc.contentType = contentType.essence;\n      }\n    }\n    const encoding = sniffHTMLEncoding(data, sniffOptions);\n    contentDoc._encoding = encoding;\n    const html = whatwgEncoding.decode(data, contentDoc._encoding);\n    try {\n      parseIntoDocument(html, contentDoc);\n    } catch (error) {\n      const {\n        DOMException\n      } = contentDoc._globalObject;\n      if (error.constructor.name === \"DOMException\" && error.code === DOMException.SYNTAX_ERR && contentDoc._parsingMode === \"xml\") {\n        // As defined (https://html.spec.whatwg.org/#read-xml) parsing error in XML document may be reported inline by\n        // mutating the document.\n        const element = contentDoc.createElementNS(\"http://www.mozilla.org/newlayout/xml/parsererror.xml\", \"parsererror\");\n        element.textContent = error.message;\n        while (contentDoc.childNodes.length > 0) {\n          contentDoc.removeChild(contentDoc.lastChild);\n        }\n        contentDoc.appendChild(element);\n      } else {\n        throw error;\n      }\n    }\n    contentDoc.close();\n    return new Promise((resolve, reject) => {\n      contentDoc.addEventListener(\"load\", resolve);\n      contentDoc.addEventListener(\"error\", reject);\n    });\n  }\n  request = resourceLoader.fetch(serializedURL, {\n    element: frame,\n    onLoad: onFrameLoaded\n  });\n}\nfunction canDispatchEvents(frame, attaching) {\n  if (!attaching) {\n    return false;\n  }\n  return Object.keys(frame._eventListeners).length === 0;\n}\nfunction loadFrame(frame, attaching) {\n  if (frame._contentDocument) {\n    if (frame._contentDocument._defaultView) {\n      // close calls delete on its document.\n      frame._contentDocument._defaultView.close();\n    } else {\n      delete frame._contentDocument;\n    }\n  }\n  const parentDoc = frame._ownerDocument;\n\n  // https://html.spec.whatwg.org/#process-the-iframe-attributes\n  let url;\n  const srcAttribute = getAttributeValue(frame, \"src\");\n  if (srcAttribute === \"\") {\n    url = parseURL(\"about:blank\");\n  } else {\n    url = parseURL(srcAttribute, {\n      baseURL: documentBaseURL(parentDoc) || undefined\n    }) || parseURL(\"about:blank\");\n  }\n  const serializedURL = serializeURL(url);\n  const wnd = window.createWindow({\n    parsingMode: \"html\",\n    url: url.scheme === \"javascript\" ? parentDoc.URL : serializedURL,\n    parentOrigin: parentDoc._origin,\n    resourceLoader: parentDoc._defaultView._resourceLoader,\n    referrer: parentDoc.URL,\n    cookieJar: parentDoc._cookieJar,\n    pool: parentDoc._pool,\n    encoding: parentDoc._encoding,\n    runScripts: parentDoc._defaultView._runScripts,\n    commonForOrigin: parentDoc._defaultView._commonForOrigin,\n    pretendToBeVisual: parentDoc._defaultView._pretendToBeVisual\n  });\n  const contentDoc = frame._contentDocument = idlUtils.implForWrapper(wnd._document);\n  const parent = parentDoc._defaultView;\n  const contentWindow = contentDoc._defaultView;\n  contentWindow._parent = parent;\n  contentWindow._top = parent.top;\n  contentWindow._frameElement = frame;\n  contentWindow._virtualConsole = parent._virtualConsole;\n  if (parentDoc._origin === contentDoc._origin) {\n    contentWindow._currentOriginData.windowsInSameOrigin.push(contentWindow);\n  }\n  const noQueue = canDispatchEvents(frame, attaching);\n\n  // Handle about:blank with a simulated load of an empty document.\n  if (serializedURL === \"about:blank\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else if (url.scheme === \"javascript\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n    const result = evaluateJavaScriptURL(contentWindow, url);\n    if (typeof result === \"string\") {\n      contentDoc.body.textContent = result;\n    }\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else {\n    fetchFrame(serializedURL, frame, parentDoc, contentDoc);\n  }\n}\nfunction refreshAccessors(document) {\n  const {\n    _defaultView\n  } = document;\n  if (!_defaultView) {\n    return;\n  }\n  const frames = document.querySelectorAll(\"iframe,frame\");\n\n  // delete accessors for all frames\n  for (let i = 0; i < _defaultView._length; ++i) {\n    delete _defaultView[i];\n  }\n  _defaultView._length = frames.length;\n  Array.prototype.forEach.call(frames, (frame, i) => {\n    Object.defineProperty(_defaultView, i, {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return frame.contentWindow;\n      }\n    });\n  });\n}\nclass HTMLFrameElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._contentDocument = null;\n  }\n  _attrModified(name, value, oldVal) {\n    super._attrModified(name, value, oldVal);\n    if (name === \"src\") {\n      // iframe should never load in a document without a Window\n      // (e.g. implementation.createHTMLDocument)\n      if (this._attached && this._ownerDocument._defaultView) {\n        loadFrame(this);\n      }\n    }\n  }\n  _detach() {\n    super._detach();\n    if (this.contentWindow) {\n      this.contentWindow.close();\n    }\n    refreshAccessors(this._ownerDocument);\n  }\n  _attach() {\n    super._attach();\n    if (this._ownerDocument._defaultView) {\n      loadFrame(this, true);\n    }\n    refreshAccessors(this._ownerDocument);\n  }\n  get contentDocument() {\n    return this._contentDocument;\n  }\n  get contentWindow() {\n    return this.contentDocument ? this.contentDocument._defaultView : null;\n  }\n}\nmodule.exports = {\n  implementation: HTMLFrameElementImpl\n};","map":{"version":3,"names":["MIMEType","require","whatwgEncoding","parseURL","serializeURL","sniffHTMLEncoding","window","HTMLElementImpl","implementation","evaluateJavaScriptURL","parseIntoDocument","documentBaseURL","fireAnEvent","getAttributeValue","idlUtils","fireLoadEvent","document","frame","attaching","dummyPromise","Promise","resolve","onLoad","_queue","push","fetchFrame","serializedURL","contentDoc","resourceLoader","_resourceLoader","request","onFrameLoaded","data","sniffOptions","defaultEncoding","_encoding","response","contentType","parse","headers","transportLayerEncodingLabel","parameters","get","isXML","_parsingMode","essence","encoding","html","decode","error","DOMException","_globalObject","constructor","name","code","SYNTAX_ERR","element","createElementNS","textContent","message","childNodes","length","removeChild","lastChild","appendChild","close","reject","addEventListener","fetch","canDispatchEvents","Object","keys","_eventListeners","loadFrame","_contentDocument","_defaultView","parentDoc","_ownerDocument","url","srcAttribute","baseURL","undefined","wnd","createWindow","parsingMode","scheme","URL","parentOrigin","_origin","referrer","cookieJar","_cookieJar","pool","_pool","runScripts","_runScripts","commonForOrigin","_commonForOrigin","pretendToBeVisual","_pretendToBeVisual","implForWrapper","_document","parent","contentWindow","_parent","_top","top","_frameElement","_virtualConsole","_currentOriginData","windowsInSameOrigin","noQueue","result","body","refreshAccessors","frames","querySelectorAll","i","_length","Array","prototype","forEach","call","defineProperty","configurable","enumerable","HTMLFrameElementImpl","globalObject","args","privateData","_attrModified","value","oldVal","_attached","_detach","_attach","contentDocument","module","exports"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst MIMEType = require(\"whatwg-mimetype\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst { parseURL, serializeURL } = require(\"whatwg-url\");\nconst sniffHTMLEncoding = require(\"html-encoding-sniffer\");\n\nconst window = require(\"../../browser/Window\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { evaluateJavaScriptURL } = require(\"../window/navigation\");\nconst { parseIntoDocument } = require(\"../../browser/parser\");\nconst { documentBaseURL } = require(\"../helpers/document-base-url\");\nconst { fireAnEvent } = require(\"../helpers/events\");\nconst { getAttributeValue } = require(\"../attributes\");\nconst idlUtils = require(\"../generated/utils\");\n\nfunction fireLoadEvent(document, frame, attaching) {\n  if (attaching) {\n    fireAnEvent(\"load\", frame);\n\n    return;\n  }\n\n  const dummyPromise = Promise.resolve();\n\n  function onLoad() {\n    fireAnEvent(\"load\", frame);\n  }\n\n  document._queue.push(dummyPromise, onLoad);\n}\n\nfunction fetchFrame(serializedURL, frame, document, contentDoc) {\n  const resourceLoader = document._resourceLoader;\n\n  let request;\n\n  function onFrameLoaded(data) {\n    const sniffOptions = {\n      defaultEncoding: document._encoding\n    };\n\n    if (request.response) {\n      const contentType = MIMEType.parse(request.response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n      sniffOptions.transportLayerEncodingLabel = contentType.parameters.get(\"charset\");\n\n      if (contentType) {\n        if (contentType.isXML()) {\n          contentDoc._parsingMode = \"xml\";\n        }\n        contentDoc.contentType = contentType.essence;\n      }\n    }\n\n    const encoding = sniffHTMLEncoding(data, sniffOptions);\n    contentDoc._encoding = encoding;\n\n    const html = whatwgEncoding.decode(data, contentDoc._encoding);\n\n    try {\n      parseIntoDocument(html, contentDoc);\n    } catch (error) {\n      const { DOMException } = contentDoc._globalObject;\n\n      if (\n        error.constructor.name === \"DOMException\" &&\n        error.code === DOMException.SYNTAX_ERR &&\n        contentDoc._parsingMode === \"xml\"\n      ) {\n        // As defined (https://html.spec.whatwg.org/#read-xml) parsing error in XML document may be reported inline by\n        // mutating the document.\n        const element = contentDoc.createElementNS(\"http://www.mozilla.org/newlayout/xml/parsererror.xml\", \"parsererror\");\n        element.textContent = error.message;\n\n        while (contentDoc.childNodes.length > 0) {\n          contentDoc.removeChild(contentDoc.lastChild);\n        }\n        contentDoc.appendChild(element);\n      } else {\n        throw error;\n      }\n    }\n\n    contentDoc.close();\n\n    return new Promise((resolve, reject) => {\n      contentDoc.addEventListener(\"load\", resolve);\n      contentDoc.addEventListener(\"error\", reject);\n    });\n  }\n\n  request = resourceLoader.fetch(serializedURL, {\n    element: frame,\n    onLoad: onFrameLoaded\n  });\n}\n\nfunction canDispatchEvents(frame, attaching) {\n  if (!attaching) {\n    return false;\n  }\n\n  return Object.keys(frame._eventListeners).length === 0;\n}\n\nfunction loadFrame(frame, attaching) {\n  if (frame._contentDocument) {\n    if (frame._contentDocument._defaultView) {\n      // close calls delete on its document.\n      frame._contentDocument._defaultView.close();\n    } else {\n      delete frame._contentDocument;\n    }\n  }\n\n  const parentDoc = frame._ownerDocument;\n\n  // https://html.spec.whatwg.org/#process-the-iframe-attributes\n  let url;\n  const srcAttribute = getAttributeValue(frame, \"src\");\n  if (srcAttribute === \"\") {\n    url = parseURL(\"about:blank\");\n  } else {\n    url = parseURL(srcAttribute, { baseURL: documentBaseURL(parentDoc) || undefined }) || parseURL(\"about:blank\");\n  }\n  const serializedURL = serializeURL(url);\n\n  const wnd = window.createWindow({\n    parsingMode: \"html\",\n    url: url.scheme === \"javascript\" ? parentDoc.URL : serializedURL,\n    parentOrigin: parentDoc._origin,\n    resourceLoader: parentDoc._defaultView._resourceLoader,\n    referrer: parentDoc.URL,\n    cookieJar: parentDoc._cookieJar,\n    pool: parentDoc._pool,\n    encoding: parentDoc._encoding,\n    runScripts: parentDoc._defaultView._runScripts,\n    commonForOrigin: parentDoc._defaultView._commonForOrigin,\n    pretendToBeVisual: parentDoc._defaultView._pretendToBeVisual\n  });\n\n  const contentDoc = frame._contentDocument = idlUtils.implForWrapper(wnd._document);\n  const parent = parentDoc._defaultView;\n  const contentWindow = contentDoc._defaultView;\n  contentWindow._parent = parent;\n  contentWindow._top = parent.top;\n  contentWindow._frameElement = frame;\n  contentWindow._virtualConsole = parent._virtualConsole;\n\n  if (parentDoc._origin === contentDoc._origin) {\n    contentWindow._currentOriginData.windowsInSameOrigin.push(contentWindow);\n  }\n\n  const noQueue = canDispatchEvents(frame, attaching);\n\n  // Handle about:blank with a simulated load of an empty document.\n  if (serializedURL === \"about:blank\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else if (url.scheme === \"javascript\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n    const result = evaluateJavaScriptURL(contentWindow, url);\n    if (typeof result === \"string\") {\n      contentDoc.body.textContent = result;\n    }\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else {\n    fetchFrame(serializedURL, frame, parentDoc, contentDoc);\n  }\n}\n\nfunction refreshAccessors(document) {\n  const { _defaultView } = document;\n\n  if (!_defaultView) {\n    return;\n  }\n\n  const frames = document.querySelectorAll(\"iframe,frame\");\n\n  // delete accessors for all frames\n  for (let i = 0; i < _defaultView._length; ++i) {\n    delete _defaultView[i];\n  }\n\n  _defaultView._length = frames.length;\n  Array.prototype.forEach.call(frames, (frame, i) => {\n    Object.defineProperty(_defaultView, i, {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return frame.contentWindow;\n      }\n    });\n  });\n}\n\nclass HTMLFrameElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._contentDocument = null;\n  }\n  _attrModified(name, value, oldVal) {\n    super._attrModified(name, value, oldVal);\n    if (name === \"src\") {\n      // iframe should never load in a document without a Window\n      // (e.g. implementation.createHTMLDocument)\n      if (this._attached && this._ownerDocument._defaultView) {\n        loadFrame(this);\n      }\n    }\n  }\n\n  _detach() {\n    super._detach();\n\n    if (this.contentWindow) {\n      this.contentWindow.close();\n    }\n\n    refreshAccessors(this._ownerDocument);\n  }\n\n  _attach() {\n    super._attach();\n\n    if (this._ownerDocument._defaultView) {\n      loadFrame(this, true);\n    }\n    refreshAccessors(this._ownerDocument);\n  }\n\n  get contentDocument() {\n    return this._contentDocument;\n  }\n\n  get contentWindow() {\n    return this.contentDocument ? this.contentDocument._defaultView : null;\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLFrameElementImpl\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC3C,MAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACjD,MAAM;EAAEE,QAAQ;EAAEC;AAAa,CAAC,GAAGH,OAAO,CAAC,YAAY,CAAC;AACxD,MAAMI,iBAAiB,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAE1D,MAAMK,MAAM,GAAGL,OAAO,CAAC,sBAAsB,CAAC;AAC9C,MAAMM,eAAe,GAAGN,OAAO,CAAC,oBAAoB,CAAC,CAACO,cAAc;AACpE,MAAM;EAAEC;AAAsB,CAAC,GAAGR,OAAO,CAAC,sBAAsB,CAAC;AACjE,MAAM;EAAES;AAAkB,CAAC,GAAGT,OAAO,CAAC,sBAAsB,CAAC;AAC7D,MAAM;EAAEU;AAAgB,CAAC,GAAGV,OAAO,CAAC,8BAA8B,CAAC;AACnE,MAAM;EAAEW;AAAY,CAAC,GAAGX,OAAO,CAAC,mBAAmB,CAAC;AACpD,MAAM;EAAEY;AAAkB,CAAC,GAAGZ,OAAO,CAAC,eAAe,CAAC;AACtD,MAAMa,QAAQ,GAAGb,OAAO,CAAC,oBAAoB,CAAC;AAE9C,SAASc,aAAaA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAE;EACjD,IAAIA,SAAS,EAAE;IACbN,WAAW,CAAC,MAAM,EAAEK,KAAK,CAAC;IAE1B;EACF;EAEA,MAAME,YAAY,GAAGC,OAAO,CAACC,OAAO,CAAC,CAAC;EAEtC,SAASC,MAAMA,CAAA,EAAG;IAChBV,WAAW,CAAC,MAAM,EAAEK,KAAK,CAAC;EAC5B;EAEAD,QAAQ,CAACO,MAAM,CAACC,IAAI,CAACL,YAAY,EAAEG,MAAM,CAAC;AAC5C;AAEA,SAASG,UAAUA,CAACC,aAAa,EAAET,KAAK,EAAED,QAAQ,EAAEW,UAAU,EAAE;EAC9D,MAAMC,cAAc,GAAGZ,QAAQ,CAACa,eAAe;EAE/C,IAAIC,OAAO;EAEX,SAASC,aAAaA,CAACC,IAAI,EAAE;IAC3B,MAAMC,YAAY,GAAG;MACnBC,eAAe,EAAElB,QAAQ,CAACmB;IAC5B,CAAC;IAED,IAAIL,OAAO,CAACM,QAAQ,EAAE;MACpB,MAAMC,WAAW,GAAGrC,QAAQ,CAACsC,KAAK,CAACR,OAAO,CAACM,QAAQ,CAACG,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,IAAIvC,QAAQ,CAAC,YAAY,CAAC;MAC1GiC,YAAY,CAACO,2BAA2B,GAAGH,WAAW,CAACI,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC;MAEhF,IAAIL,WAAW,EAAE;QACf,IAAIA,WAAW,CAACM,KAAK,CAAC,CAAC,EAAE;UACvBhB,UAAU,CAACiB,YAAY,GAAG,KAAK;QACjC;QACAjB,UAAU,CAACU,WAAW,GAAGA,WAAW,CAACQ,OAAO;MAC9C;IACF;IAEA,MAAMC,QAAQ,GAAGzC,iBAAiB,CAAC2B,IAAI,EAAEC,YAAY,CAAC;IACtDN,UAAU,CAACQ,SAAS,GAAGW,QAAQ;IAE/B,MAAMC,IAAI,GAAG7C,cAAc,CAAC8C,MAAM,CAAChB,IAAI,EAAEL,UAAU,CAACQ,SAAS,CAAC;IAE9D,IAAI;MACFzB,iBAAiB,CAACqC,IAAI,EAAEpB,UAAU,CAAC;IACrC,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACd,MAAM;QAAEC;MAAa,CAAC,GAAGvB,UAAU,CAACwB,aAAa;MAEjD,IACEF,KAAK,CAACG,WAAW,CAACC,IAAI,KAAK,cAAc,IACzCJ,KAAK,CAACK,IAAI,KAAKJ,YAAY,CAACK,UAAU,IACtC5B,UAAU,CAACiB,YAAY,KAAK,KAAK,EACjC;QACA;QACA;QACA,MAAMY,OAAO,GAAG7B,UAAU,CAAC8B,eAAe,CAAC,sDAAsD,EAAE,aAAa,CAAC;QACjHD,OAAO,CAACE,WAAW,GAAGT,KAAK,CAACU,OAAO;QAEnC,OAAOhC,UAAU,CAACiC,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;UACvClC,UAAU,CAACmC,WAAW,CAACnC,UAAU,CAACoC,SAAS,CAAC;QAC9C;QACApC,UAAU,CAACqC,WAAW,CAACR,OAAO,CAAC;MACjC,CAAC,MAAM;QACL,MAAMP,KAAK;MACb;IACF;IAEAtB,UAAU,CAACsC,KAAK,CAAC,CAAC;IAElB,OAAO,IAAI7C,OAAO,CAAC,CAACC,OAAO,EAAE6C,MAAM,KAAK;MACtCvC,UAAU,CAACwC,gBAAgB,CAAC,MAAM,EAAE9C,OAAO,CAAC;MAC5CM,UAAU,CAACwC,gBAAgB,CAAC,OAAO,EAAED,MAAM,CAAC;IAC9C,CAAC,CAAC;EACJ;EAEApC,OAAO,GAAGF,cAAc,CAACwC,KAAK,CAAC1C,aAAa,EAAE;IAC5C8B,OAAO,EAAEvC,KAAK;IACdK,MAAM,EAAES;EACV,CAAC,CAAC;AACJ;AAEA,SAASsC,iBAAiBA,CAACpD,KAAK,EAAEC,SAAS,EAAE;EAC3C,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,KAAK;EACd;EAEA,OAAOoD,MAAM,CAACC,IAAI,CAACtD,KAAK,CAACuD,eAAe,CAAC,CAACX,MAAM,KAAK,CAAC;AACxD;AAEA,SAASY,SAASA,CAACxD,KAAK,EAAEC,SAAS,EAAE;EACnC,IAAID,KAAK,CAACyD,gBAAgB,EAAE;IAC1B,IAAIzD,KAAK,CAACyD,gBAAgB,CAACC,YAAY,EAAE;MACvC;MACA1D,KAAK,CAACyD,gBAAgB,CAACC,YAAY,CAACV,KAAK,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL,OAAOhD,KAAK,CAACyD,gBAAgB;IAC/B;EACF;EAEA,MAAME,SAAS,GAAG3D,KAAK,CAAC4D,cAAc;;EAEtC;EACA,IAAIC,GAAG;EACP,MAAMC,YAAY,GAAGlE,iBAAiB,CAACI,KAAK,EAAE,KAAK,CAAC;EACpD,IAAI8D,YAAY,KAAK,EAAE,EAAE;IACvBD,GAAG,GAAG3E,QAAQ,CAAC,aAAa,CAAC;EAC/B,CAAC,MAAM;IACL2E,GAAG,GAAG3E,QAAQ,CAAC4E,YAAY,EAAE;MAAEC,OAAO,EAAErE,eAAe,CAACiE,SAAS,CAAC,IAAIK;IAAU,CAAC,CAAC,IAAI9E,QAAQ,CAAC,aAAa,CAAC;EAC/G;EACA,MAAMuB,aAAa,GAAGtB,YAAY,CAAC0E,GAAG,CAAC;EAEvC,MAAMI,GAAG,GAAG5E,MAAM,CAAC6E,YAAY,CAAC;IAC9BC,WAAW,EAAE,MAAM;IACnBN,GAAG,EAAEA,GAAG,CAACO,MAAM,KAAK,YAAY,GAAGT,SAAS,CAACU,GAAG,GAAG5D,aAAa;IAChE6D,YAAY,EAAEX,SAAS,CAACY,OAAO;IAC/B5D,cAAc,EAAEgD,SAAS,CAACD,YAAY,CAAC9C,eAAe;IACtD4D,QAAQ,EAAEb,SAAS,CAACU,GAAG;IACvBI,SAAS,EAAEd,SAAS,CAACe,UAAU;IAC/BC,IAAI,EAAEhB,SAAS,CAACiB,KAAK;IACrB/C,QAAQ,EAAE8B,SAAS,CAACzC,SAAS;IAC7B2D,UAAU,EAAElB,SAAS,CAACD,YAAY,CAACoB,WAAW;IAC9CC,eAAe,EAAEpB,SAAS,CAACD,YAAY,CAACsB,gBAAgB;IACxDC,iBAAiB,EAAEtB,SAAS,CAACD,YAAY,CAACwB;EAC5C,CAAC,CAAC;EAEF,MAAMxE,UAAU,GAAGV,KAAK,CAACyD,gBAAgB,GAAG5D,QAAQ,CAACsF,cAAc,CAAClB,GAAG,CAACmB,SAAS,CAAC;EAClF,MAAMC,MAAM,GAAG1B,SAAS,CAACD,YAAY;EACrC,MAAM4B,aAAa,GAAG5E,UAAU,CAACgD,YAAY;EAC7C4B,aAAa,CAACC,OAAO,GAAGF,MAAM;EAC9BC,aAAa,CAACE,IAAI,GAAGH,MAAM,CAACI,GAAG;EAC/BH,aAAa,CAACI,aAAa,GAAG1F,KAAK;EACnCsF,aAAa,CAACK,eAAe,GAAGN,MAAM,CAACM,eAAe;EAEtD,IAAIhC,SAAS,CAACY,OAAO,KAAK7D,UAAU,CAAC6D,OAAO,EAAE;IAC5Ce,aAAa,CAACM,kBAAkB,CAACC,mBAAmB,CAACtF,IAAI,CAAC+E,aAAa,CAAC;EAC1E;EAEA,MAAMQ,OAAO,GAAG1C,iBAAiB,CAACpD,KAAK,EAAEC,SAAS,CAAC;;EAEnD;EACA,IAAIQ,aAAa,KAAK,aAAa,EAAE;IACnC;IACAhB,iBAAiB,CAAC,yCAAyC,EAAEiB,UAAU,CAAC;IACxEA,UAAU,CAACsC,KAAK,CAAC8C,OAAO,CAAC;IAEzB,IAAIA,OAAO,EAAE;MACXhG,aAAa,CAAC6D,SAAS,EAAE3D,KAAK,EAAE8F,OAAO,CAAC;IAC1C,CAAC,MAAM;MACLpF,UAAU,CAACwC,gBAAgB,CAAC,MAAM,EAAE,MAAM;QACxCpD,aAAa,CAAC6D,SAAS,EAAE3D,KAAK,CAAC;MACjC,CAAC,CAAC;IACJ;EACF,CAAC,MAAM,IAAI6D,GAAG,CAACO,MAAM,KAAK,YAAY,EAAE;IACtC;IACA3E,iBAAiB,CAAC,yCAAyC,EAAEiB,UAAU,CAAC;IACxEA,UAAU,CAACsC,KAAK,CAAC8C,OAAO,CAAC;IACzB,MAAMC,MAAM,GAAGvG,qBAAqB,CAAC8F,aAAa,EAAEzB,GAAG,CAAC;IACxD,IAAI,OAAOkC,MAAM,KAAK,QAAQ,EAAE;MAC9BrF,UAAU,CAACsF,IAAI,CAACvD,WAAW,GAAGsD,MAAM;IACtC;IACA,IAAID,OAAO,EAAE;MACXhG,aAAa,CAAC6D,SAAS,EAAE3D,KAAK,EAAE8F,OAAO,CAAC;IAC1C,CAAC,MAAM;MACLpF,UAAU,CAACwC,gBAAgB,CAAC,MAAM,EAAE,MAAM;QACxCpD,aAAa,CAAC6D,SAAS,EAAE3D,KAAK,CAAC;MACjC,CAAC,CAAC;IACJ;EACF,CAAC,MAAM;IACLQ,UAAU,CAACC,aAAa,EAAET,KAAK,EAAE2D,SAAS,EAAEjD,UAAU,CAAC;EACzD;AACF;AAEA,SAASuF,gBAAgBA,CAAClG,QAAQ,EAAE;EAClC,MAAM;IAAE2D;EAAa,CAAC,GAAG3D,QAAQ;EAEjC,IAAI,CAAC2D,YAAY,EAAE;IACjB;EACF;EAEA,MAAMwC,MAAM,GAAGnG,QAAQ,CAACoG,gBAAgB,CAAC,cAAc,CAAC;;EAExD;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,YAAY,CAAC2C,OAAO,EAAE,EAAED,CAAC,EAAE;IAC7C,OAAO1C,YAAY,CAAC0C,CAAC,CAAC;EACxB;EAEA1C,YAAY,CAAC2C,OAAO,GAAGH,MAAM,CAACtD,MAAM;EACpC0D,KAAK,CAACC,SAAS,CAACC,OAAO,CAACC,IAAI,CAACP,MAAM,EAAE,CAAClG,KAAK,EAAEoG,CAAC,KAAK;IACjD/C,MAAM,CAACqD,cAAc,CAAChD,YAAY,EAAE0C,CAAC,EAAE;MACrCO,YAAY,EAAE,IAAI;MAClBC,UAAU,EAAE,IAAI;MAChBnF,GAAGA,CAAA,EAAG;QACJ,OAAOzB,KAAK,CAACsF,aAAa;MAC5B;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,MAAMuB,oBAAoB,SAASvH,eAAe,CAAC;EACjD6C,WAAWA,CAAC2E,YAAY,EAAEC,IAAI,EAAEC,WAAW,EAAE;IAC3C,KAAK,CAACF,YAAY,EAAEC,IAAI,EAAEC,WAAW,CAAC;IACtC,IAAI,CAACvD,gBAAgB,GAAG,IAAI;EAC9B;EACAwD,aAAaA,CAAC7E,IAAI,EAAE8E,KAAK,EAAEC,MAAM,EAAE;IACjC,KAAK,CAACF,aAAa,CAAC7E,IAAI,EAAE8E,KAAK,EAAEC,MAAM,CAAC;IACxC,IAAI/E,IAAI,KAAK,KAAK,EAAE;MAClB;MACA;MACA,IAAI,IAAI,CAACgF,SAAS,IAAI,IAAI,CAACxD,cAAc,CAACF,YAAY,EAAE;QACtDF,SAAS,CAAC,IAAI,CAAC;MACjB;IACF;EACF;EAEA6D,OAAOA,CAAA,EAAG;IACR,KAAK,CAACA,OAAO,CAAC,CAAC;IAEf,IAAI,IAAI,CAAC/B,aAAa,EAAE;MACtB,IAAI,CAACA,aAAa,CAACtC,KAAK,CAAC,CAAC;IAC5B;IAEAiD,gBAAgB,CAAC,IAAI,CAACrC,cAAc,CAAC;EACvC;EAEA0D,OAAOA,CAAA,EAAG;IACR,KAAK,CAACA,OAAO,CAAC,CAAC;IAEf,IAAI,IAAI,CAAC1D,cAAc,CAACF,YAAY,EAAE;MACpCF,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;IACvB;IACAyC,gBAAgB,CAAC,IAAI,CAACrC,cAAc,CAAC;EACvC;EAEA,IAAI2D,eAAeA,CAAA,EAAG;IACpB,OAAO,IAAI,CAAC9D,gBAAgB;EAC9B;EAEA,IAAI6B,aAAaA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACiC,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC7D,YAAY,GAAG,IAAI;EACxE;AACF;AAEA8D,MAAM,CAACC,OAAO,GAAG;EACflI,cAAc,EAAEsH;AAClB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}