{"ast":null,"code":"var _jsxFileName = \"D:\\\\benki\\\\Programming\\\\GitHub\\\\homelab-dashboard\\\\client\\\\homelab-dashboard\\\\src\\\\ServicesSection.js\";\nimport React from \"react\";\nimport Service from \"./Service\";\nimport config from \"./config\";\nconst servicesConfig = {};\nfunction ServicesSection() {\n  /*useEffect(() => {\r\n      // Function to be executed every second\r\n      const updateSystemInfo = () => {\r\n        \r\n        systemConnector.getCpuUtilization((error, result) => {\r\n          if(error) {\r\n            console.error(error);\r\n          }\r\n          else {\r\n            setCpuUtilizationPercent(result);\r\n          }\r\n        });\r\n  \r\n      // Set up the interval\r\n      const intervalId = setInterval(updateSystemInfo, 1000); // 1000 milliseconds = 1 second\r\n  \r\n      // Clean up the interval when the component unmounts\r\n      return () => clearInterval(intervalId);\r\n    }, []); // Empty dependency array ensures that the effect runs only once*/\n\n  config.servicesConfigLoader(() => {\n    if (error) {\n      console.log(error);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"services-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"services-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Service, {\n    serviceURL: \"http://###.###.###.###:###\",\n    imgPath: \"#\",\n    altText: \"#\",\n    serviceName: \"Proxmox VE\",\n    ipAddress: \"\",\n    hostName: \"pve\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Service, {\n    serviceURL: \"http://nas-omv\",\n    imgPath: \"#\",\n    altText: \"#\",\n    serviceName: \"Open Media Vault - NAS\",\n    ipAddress: \"\",\n    hostName: \"nas-omv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Service, {\n    serviceURL: \"http://###.###.###.###:###\",\n    imgPath: \"#\",\n    altText: \"#\",\n    serviceName: \"Supermico IMPI\",\n    ipAddress: \"\",\n    hostName: \"SMC-X8SIL-F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })));\n}\nexport default ServicesSection;","map":{"version":3,"names":["React","Service","config","servicesConfig","ServicesSection","servicesConfigLoader","error","console","log","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","serviceURL","imgPath","altText","serviceName","ipAddress","hostName"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/src/ServicesSection.js"],"sourcesContent":["import React from \"react\";\r\nimport Service from \"./Service\";\r\nimport config from \"./config\"\r\n\r\nconst servicesConfig = {};\r\n\r\nfunction ServicesSection() {\r\n    /*useEffect(() => {\r\n        // Function to be executed every second\r\n        const updateSystemInfo = () => {\r\n          \r\n          systemConnector.getCpuUtilization((error, result) => {\r\n            if(error) {\r\n              console.error(error);\r\n            }\r\n            else {\r\n              setCpuUtilizationPercent(result);\r\n            }\r\n          });\r\n    \r\n        // Set up the interval\r\n        const intervalId = setInterval(updateSystemInfo, 1000); // 1000 milliseconds = 1 second\r\n    \r\n        // Clean up the interval when the component unmounts\r\n        return () => clearInterval(intervalId);\r\n      }, []); // Empty dependency array ensures that the effect runs only once*/\r\n\r\n\r\n    config.servicesConfigLoader(() => {\r\n        if (error) {\r\n            console.log(error);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div id=\"services-section\">\r\n            <h2>Services</h2>\r\n            <div id=\"services-container\">\r\n\r\n                <Service \r\n                    serviceURL={\"http://###.###.###.###:###\"}\r\n                    imgPath={\"#\"}\r\n                    altText={\"#\"}\r\n                    serviceName={\"Proxmox VE\"}\r\n                    ipAddress={\"\"}\r\n                    hostName={\"pve\"}\r\n                />\r\n                <Service \r\n                    serviceURL={\"http://nas-omv\"}\r\n                    imgPath={\"#\"}\r\n                    altText={\"#\"}\r\n                    serviceName={\"Open Media Vault - NAS\"}\r\n                    ipAddress={\"\"}\r\n                    hostName={\"nas-omv\"}\r\n                />\r\n                <Service \r\n                    serviceURL={\"http://###.###.###.###:###\"}\r\n                    imgPath={\"#\"}\r\n                    altText={\"#\"}\r\n                    serviceName={\"Supermico IMPI\"}\r\n                    ipAddress={\"\"}\r\n                    hostName={\"SMC-X8SIL-F\"}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServicesSection;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,cAAc,GAAG,CAAC,CAAC;AAEzB,SAASC,eAAeA,CAAA,EAAG;EACvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGIF,MAAM,CAACG,oBAAoB,CAAC,MAAM;IAC9B,IAAIC,KAAK,EAAE;MACPC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC,CAAC;EAEF,oBACIN,KAAA,CAAAS,aAAA;IAAKC,EAAE,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBhB,KAAA,CAAAS,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBhB,KAAA,CAAAS,aAAA;IAAKC,EAAE,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAExBhB,KAAA,CAAAS,aAAA,CAACR,OAAO;IACJgB,UAAU,EAAE,4BAA6B;IACzCC,OAAO,EAAE,GAAI;IACbC,OAAO,EAAE,GAAI;IACbC,WAAW,EAAE,YAAa;IAC1BC,SAAS,EAAE,EAAG;IACdC,QAAQ,EAAE,KAAM;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CAAC,eACFhB,KAAA,CAAAS,aAAA,CAACR,OAAO;IACJgB,UAAU,EAAE,gBAAiB;IAC7BC,OAAO,EAAE,GAAI;IACbC,OAAO,EAAE,GAAI;IACbC,WAAW,EAAE,wBAAyB;IACtCC,SAAS,EAAE,EAAG;IACdC,QAAQ,EAAE,SAAU;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvB,CAAC,eACFhB,KAAA,CAAAS,aAAA,CAACR,OAAO;IACJgB,UAAU,EAAE,4BAA6B;IACzCC,OAAO,EAAE,GAAI;IACbC,OAAO,EAAE,GAAI;IACbC,WAAW,EAAE,gBAAiB;IAC9BC,SAAS,EAAE,EAAG;IACdC,QAAQ,EAAE,aAAc;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CACA,CACJ,CAAC;AAEd;AAEA,eAAeZ,eAAe"},"metadata":{},"sourceType":"module"}