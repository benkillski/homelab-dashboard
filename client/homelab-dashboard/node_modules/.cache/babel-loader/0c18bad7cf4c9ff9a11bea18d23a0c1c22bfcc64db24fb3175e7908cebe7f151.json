{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst NodeList = require(\"../generated/NodeList\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst {\n  addNwsapi\n} = require(\"../helpers/selectors\");\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst {\n  convertNodesIntoNode\n} = require(\"../node\");\nclass ParentNodeImpl {\n  get children() {\n    if (!this._childrenList) {\n      this._childrenList = HTMLCollection.createImpl(this._globalObject, [], {\n        element: this,\n        query: () => domSymbolTree.childrenToArray(this, {\n          filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE\n        })\n      });\n    } else {\n      this._childrenList._update();\n    }\n    return this._childrenList;\n  }\n  get firstElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n    return null;\n  }\n  get lastElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this, {\n      reverse: true\n    })) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n    return null;\n  }\n  get childElementCount() {\n    return this.children.length;\n  }\n  prepend(...nodes) {\n    this._preInsert(convertNodesIntoNode(this._ownerDocument, nodes), this.firstChild);\n  }\n  append(...nodes) {\n    this._append(convertNodesIntoNode(this._ownerDocument, nodes));\n  }\n  replaceChildren(...nodes) {\n    const node = convertNodesIntoNode(this._ownerDocument, nodes);\n    this._preInsertValidity(node, null);\n    this._replaceAll(node);\n  }\n  querySelector(selectors) {\n    if (shouldAlwaysSelectNothing(this)) {\n      return null;\n    }\n    const matcher = addNwsapi(this);\n    return idlUtils.implForWrapper(matcher.first(selectors, idlUtils.wrapperForImpl(this)));\n  }\n\n  // Warning for internal users: this returns a NodeList containing IDL wrappers instead of impls\n  querySelectorAll(selectors) {\n    if (shouldAlwaysSelectNothing(this)) {\n      return NodeList.create(this._globalObject, [], {\n        nodes: []\n      });\n    }\n    const matcher = addNwsapi(this);\n    const list = matcher.select(selectors, idlUtils.wrapperForImpl(this));\n    return NodeList.create(this._globalObject, [], {\n      nodes: list.map(n => idlUtils.tryImplForWrapper(n))\n    });\n  }\n}\nfunction shouldAlwaysSelectNothing(elImpl) {\n  // This is true during initialization.\n  return elImpl === elImpl._ownerDocument && !elImpl.documentElement;\n}\nmodule.exports = {\n  implementation: ParentNodeImpl\n};","map":{"version":3,"names":["idlUtils","require","NodeList","HTMLCollection","addNwsapi","domSymbolTree","NODE_TYPE","convertNodesIntoNode","ParentNodeImpl","children","_childrenList","createImpl","_globalObject","element","query","childrenToArray","filter","node","nodeType","ELEMENT_NODE","_update","firstElementChild","child","childrenIterator","lastElementChild","reverse","childElementCount","length","prepend","nodes","_preInsert","_ownerDocument","firstChild","append","_append","replaceChildren","_preInsertValidity","_replaceAll","querySelector","selectors","shouldAlwaysSelectNothing","matcher","implForWrapper","first","wrapperForImpl","querySelectorAll","create","list","select","map","n","tryImplForWrapper","elImpl","documentElement","module","exports","implementation"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/jsdom/lib/jsdom/living/nodes/ParentNode-impl.js"],"sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst NodeList = require(\"../generated/NodeList\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst { addNwsapi } = require(\"../helpers/selectors\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst { convertNodesIntoNode } = require(\"../node\");\n\nclass ParentNodeImpl {\n  get children() {\n    if (!this._childrenList) {\n      this._childrenList = HTMLCollection.createImpl(this._globalObject, [], {\n        element: this,\n        query: () => domSymbolTree.childrenToArray(this, {\n          filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE\n        })\n      });\n    } else {\n      this._childrenList._update();\n    }\n    return this._childrenList;\n  }\n\n  get firstElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get lastElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this, { reverse: true })) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get childElementCount() {\n    return this.children.length;\n  }\n\n  prepend(...nodes) {\n    this._preInsert(convertNodesIntoNode(this._ownerDocument, nodes), this.firstChild);\n  }\n\n  append(...nodes) {\n    this._append(convertNodesIntoNode(this._ownerDocument, nodes));\n  }\n\n  replaceChildren(...nodes) {\n    const node = convertNodesIntoNode(this._ownerDocument, nodes);\n    this._preInsertValidity(node, null);\n    this._replaceAll(node);\n  }\n\n  querySelector(selectors) {\n    if (shouldAlwaysSelectNothing(this)) {\n      return null;\n    }\n    const matcher = addNwsapi(this);\n    return idlUtils.implForWrapper(matcher.first(selectors, idlUtils.wrapperForImpl(this)));\n  }\n\n  // Warning for internal users: this returns a NodeList containing IDL wrappers instead of impls\n  querySelectorAll(selectors) {\n    if (shouldAlwaysSelectNothing(this)) {\n      return NodeList.create(this._globalObject, [], { nodes: [] });\n    }\n    const matcher = addNwsapi(this);\n    const list = matcher.select(selectors, idlUtils.wrapperForImpl(this));\n\n    return NodeList.create(this._globalObject, [], { nodes: list.map(n => idlUtils.tryImplForWrapper(n)) });\n  }\n}\n\nfunction shouldAlwaysSelectNothing(elImpl) {\n  // This is true during initialization.\n  return elImpl === elImpl._ownerDocument && !elImpl.documentElement;\n}\n\nmodule.exports = {\n  implementation: ParentNodeImpl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}