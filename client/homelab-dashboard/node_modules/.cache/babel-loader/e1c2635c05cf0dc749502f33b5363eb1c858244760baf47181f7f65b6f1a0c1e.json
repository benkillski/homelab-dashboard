{"ast":null,"code":"\"use strict\";\n\nconst nwsapi = require(\"nwsapi\");\nconst idlUtils = require(\"../generated/utils\");\nfunction initNwsapi(node) {\n  const {\n    _globalObject,\n    _ownerDocument\n  } = node;\n  return nwsapi({\n    document: _ownerDocument,\n    DOMException: _globalObject.DOMException\n  });\n}\nexports.matchesDontThrow = (elImpl, selector) => {\n  const document = elImpl._ownerDocument;\n  if (!document._nwsapiDontThrow) {\n    document._nwsapiDontThrow = initNwsapi(elImpl);\n    document._nwsapiDontThrow.configure({\n      LOGERRORS: false,\n      VERBOSITY: false,\n      IDS_DUPES: true,\n      MIXEDCASE: true\n    });\n  }\n  return document._nwsapiDontThrow.match(selector, idlUtils.wrapperForImpl(elImpl));\n};\n\n// nwsapi gets `document.documentElement` at creation-time, so we have to initialize lazily, since in the initial\n// stages of Document initialization, there is no documentElement present yet.\nexports.addNwsapi = parentNode => {\n  const document = parentNode._ownerDocument;\n  if (!document._nwsapi) {\n    document._nwsapi = initNwsapi(parentNode);\n    document._nwsapi.configure({\n      LOGERRORS: false,\n      IDS_DUPES: true,\n      MIXEDCASE: true\n    });\n  }\n  return document._nwsapi;\n};","map":{"version":3,"names":["nwsapi","require","idlUtils","initNwsapi","node","_globalObject","_ownerDocument","document","DOMException","exports","matchesDontThrow","elImpl","selector","_nwsapiDontThrow","configure","LOGERRORS","VERBOSITY","IDS_DUPES","MIXEDCASE","match","wrapperForImpl","addNwsapi","parentNode","_nwsapi"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/jsdom/lib/jsdom/living/helpers/selectors.js"],"sourcesContent":["\"use strict\";\n\nconst nwsapi = require(\"nwsapi\");\n\nconst idlUtils = require(\"../generated/utils\");\n\nfunction initNwsapi(node) {\n  const { _globalObject, _ownerDocument } = node;\n\n  return nwsapi({\n    document: _ownerDocument,\n    DOMException: _globalObject.DOMException\n  });\n}\n\nexports.matchesDontThrow = (elImpl, selector) => {\n  const document = elImpl._ownerDocument;\n\n  if (!document._nwsapiDontThrow) {\n    document._nwsapiDontThrow = initNwsapi(elImpl);\n    document._nwsapiDontThrow.configure({\n      LOGERRORS: false,\n      VERBOSITY: false,\n      IDS_DUPES: true,\n      MIXEDCASE: true\n    });\n  }\n\n  return document._nwsapiDontThrow.match(selector, idlUtils.wrapperForImpl(elImpl));\n};\n\n// nwsapi gets `document.documentElement` at creation-time, so we have to initialize lazily, since in the initial\n// stages of Document initialization, there is no documentElement present yet.\nexports.addNwsapi = parentNode => {\n  const document = parentNode._ownerDocument;\n\n  if (!document._nwsapi) {\n    document._nwsapi = initNwsapi(parentNode);\n    document._nwsapi.configure({\n      LOGERRORS: false,\n      IDS_DUPES: true,\n      MIXEDCASE: true\n    });\n  }\n\n  return document._nwsapi;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEhC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAE9C,SAASE,UAAUA,CAACC,IAAI,EAAE;EACxB,MAAM;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAGF,IAAI;EAE9C,OAAOJ,MAAM,CAAC;IACZO,QAAQ,EAAED,cAAc;IACxBE,YAAY,EAAEH,aAAa,CAACG;EAC9B,CAAC,CAAC;AACJ;AAEAC,OAAO,CAACC,gBAAgB,GAAG,CAACC,MAAM,EAAEC,QAAQ,KAAK;EAC/C,MAAML,QAAQ,GAAGI,MAAM,CAACL,cAAc;EAEtC,IAAI,CAACC,QAAQ,CAACM,gBAAgB,EAAE;IAC9BN,QAAQ,CAACM,gBAAgB,GAAGV,UAAU,CAACQ,MAAM,CAAC;IAC9CJ,QAAQ,CAACM,gBAAgB,CAACC,SAAS,CAAC;MAClCC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;EAEA,OAAOX,QAAQ,CAACM,gBAAgB,CAACM,KAAK,CAACP,QAAQ,EAAEV,QAAQ,CAACkB,cAAc,CAACT,MAAM,CAAC,CAAC;AACnF,CAAC;;AAED;AACA;AACAF,OAAO,CAACY,SAAS,GAAGC,UAAU,IAAI;EAChC,MAAMf,QAAQ,GAAGe,UAAU,CAAChB,cAAc;EAE1C,IAAI,CAACC,QAAQ,CAACgB,OAAO,EAAE;IACrBhB,QAAQ,CAACgB,OAAO,GAAGpB,UAAU,CAACmB,UAAU,CAAC;IACzCf,QAAQ,CAACgB,OAAO,CAACT,SAAS,CAAC;MACzBC,SAAS,EAAE,KAAK;MAChBE,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;EAEA,OAAOX,QAAQ,CAACgB,OAAO;AACzB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}