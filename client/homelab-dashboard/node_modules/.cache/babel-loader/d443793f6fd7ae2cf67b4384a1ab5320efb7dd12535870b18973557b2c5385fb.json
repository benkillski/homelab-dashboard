{"ast":null,"code":"\"use strict\";\n\n// https://infra.spec.whatwg.org/#sets\n//\n// Only use this class if a Set cannot be used, e.g. when \"replace\" operation is needed, since there's no way to replace\n// an element while keep the relative order using a Set, only remove and then add something at the end.\nmodule.exports = class OrderedSet {\n  constructor() {\n    this._items = [];\n  }\n  append(item) {\n    if (!this.contains(item)) {\n      this._items.push(item);\n    }\n  }\n  prepend(item) {\n    if (!this.contains(item)) {\n      this._items.unshift(item);\n    }\n  }\n  replace(item, replacement) {\n    let seen = false;\n    for (let i = 0; i < this._items.length;) {\n      const isInstance = this._items[i] === item || this._items[i] === replacement;\n      if (seen && isInstance) {\n        this._items.splice(i, 1);\n      } else {\n        if (isInstance) {\n          this._items[i] = replacement;\n          seen = true;\n        }\n        i++;\n      }\n    }\n  }\n  remove(...items) {\n    this.removePredicate(item => items.includes(item));\n  }\n  removePredicate(predicate) {\n    for (let i = 0; i < this._items.length;) {\n      if (predicate(this._items[i])) {\n        this._items.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n  }\n  empty() {\n    this._items.length = 0;\n  }\n  contains(item) {\n    return this._items.includes(item);\n  }\n  get size() {\n    return this._items.length;\n  }\n  isEmpty() {\n    return this._items.length === 0;\n  }\n\n  // Useful for other parts of jsdom\n\n  [Symbol.iterator]() {\n    return this._items[Symbol.iterator]();\n  }\n  keys() {\n    return this._items.keys();\n  }\n  get(index) {\n    return this._items[index];\n  }\n  some(func) {\n    return this._items.some(func);\n  }\n\n  // https://dom.spec.whatwg.org/#concept-ordered-set-parser\n  static parse(input) {\n    const tokens = new OrderedSet();\n    for (const token of input.split(/[\\t\\n\\f\\r ]+/)) {\n      if (token) {\n        tokens.append(token);\n      }\n    }\n    return tokens;\n  }\n\n  // https://dom.spec.whatwg.org/#concept-ordered-set-serializer\n  serialize() {\n    return this._items.join(\" \");\n  }\n};","map":{"version":3,"names":["module","exports","OrderedSet","constructor","_items","append","item","contains","push","prepend","unshift","replace","replacement","seen","i","length","isInstance","splice","remove","items","removePredicate","includes","predicate","empty","size","isEmpty","Symbol","iterator","keys","get","index","some","func","parse","input","tokens","token","split","serialize","join"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/jsdom/lib/jsdom/living/helpers/ordered-set.js"],"sourcesContent":["\"use strict\";\n\n// https://infra.spec.whatwg.org/#sets\n//\n// Only use this class if a Set cannot be used, e.g. when \"replace\" operation is needed, since there's no way to replace\n// an element while keep the relative order using a Set, only remove and then add something at the end.\n\nmodule.exports = class OrderedSet {\n  constructor() {\n    this._items = [];\n  }\n\n  append(item) {\n    if (!this.contains(item)) {\n      this._items.push(item);\n    }\n  }\n\n  prepend(item) {\n    if (!this.contains(item)) {\n      this._items.unshift(item);\n    }\n  }\n\n  replace(item, replacement) {\n    let seen = false;\n    for (let i = 0; i < this._items.length;) {\n      const isInstance = this._items[i] === item || this._items[i] === replacement;\n      if (seen && isInstance) {\n        this._items.splice(i, 1);\n      } else {\n        if (isInstance) {\n          this._items[i] = replacement;\n          seen = true;\n        }\n        i++;\n      }\n    }\n  }\n\n  remove(...items) {\n    this.removePredicate(item => items.includes(item));\n  }\n\n  removePredicate(predicate) {\n    for (let i = 0; i < this._items.length;) {\n      if (predicate(this._items[i])) {\n        this._items.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n  }\n\n  empty() {\n    this._items.length = 0;\n  }\n\n  contains(item) {\n    return this._items.includes(item);\n  }\n\n  get size() {\n    return this._items.length;\n  }\n\n  isEmpty() {\n    return this._items.length === 0;\n  }\n\n  // Useful for other parts of jsdom\n\n  [Symbol.iterator]() {\n    return this._items[Symbol.iterator]();\n  }\n\n  keys() {\n    return this._items.keys();\n  }\n\n  get(index) {\n    return this._items[index];\n  }\n\n  some(func) {\n    return this._items.some(func);\n  }\n\n  // https://dom.spec.whatwg.org/#concept-ordered-set-parser\n  static parse(input) {\n    const tokens = new OrderedSet();\n    for (const token of input.split(/[\\t\\n\\f\\r ]+/)) {\n      if (token) {\n        tokens.append(token);\n      }\n    }\n    return tokens;\n  }\n\n  // https://dom.spec.whatwg.org/#concept-ordered-set-serializer\n  serialize() {\n    return this._items.join(\" \");\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}