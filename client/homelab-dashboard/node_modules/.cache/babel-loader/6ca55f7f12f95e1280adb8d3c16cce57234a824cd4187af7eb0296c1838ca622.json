{"ast":null,"code":"\"use strict\";\n\nconst enumerationValues = new Set([\"blob\", \"arraybuffer\"]);\nexports.enumerationValues = enumerationValues;\nexports.convert = function convert(value, {\n  context = \"The provided value\"\n} = {}) {\n  const string = `${value}`;\n  if (!enumerationValues.has(string)) {\n    throw new TypeError(`${context} '${string}' is not a valid enumeration value for BinaryType`);\n  }\n  return string;\n};","map":{"version":3,"names":["enumerationValues","Set","exports","convert","value","context","string","has","TypeError"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/jsdom/lib/jsdom/living/generated/BinaryType.js"],"sourcesContent":["\"use strict\";\n\nconst enumerationValues = new Set([\"blob\", \"arraybuffer\"]);\nexports.enumerationValues = enumerationValues;\n\nexports.convert = function convert(value, { context = \"The provided value\" } = {}) {\n  const string = `${value}`;\n  if (!enumerationValues.has(string)) {\n    throw new TypeError(`${context} '${string}' is not a valid enumeration value for BinaryType`);\n  }\n  return string;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;AAC1DC,OAAO,CAACF,iBAAiB,GAAGA,iBAAiB;AAE7CE,OAAO,CAACC,OAAO,GAAG,SAASA,OAAOA,CAACC,KAAK,EAAE;EAAEC,OAAO,GAAG;AAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;EACjF,MAAMC,MAAM,GAAI,GAAEF,KAAM,EAAC;EACzB,IAAI,CAACJ,iBAAiB,CAACO,GAAG,CAACD,MAAM,CAAC,EAAE;IAClC,MAAM,IAAIE,SAAS,CAAE,GAAEH,OAAQ,KAAIC,MAAO,mDAAkD,CAAC;EAC/F;EACA,OAAOA,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}