{"ast":null,"code":"// Copyright 2012 Iris Couch, all rights reserved.\n//\n// Parse DNS messages\n\nvar util = require('util');\nvar constants = require('./constants');\nmodule.exports = {\n  'id': id,\n  'qr': qr,\n  'aa': aa,\n  'tc': tc,\n  'rd': rd,\n  'ra': ra,\n  'ad': ad,\n  'cd': cd,\n  'rcode': rcode,\n  'opcode': opcode,\n  'record_count': record_count,\n  'record_name': record_name,\n  'record_class': record_class,\n  'record_ttl': record_ttl,\n  'record_type': record_type,\n  'record_data': record_data,\n  'uncompress': uncompress,\n  'sections': sections,\n  'mx': mx,\n  'srv': srv,\n  'soa': soa,\n  'txt': txt\n};\nfunction id(msg) {\n  return msg.readUInt16BE(0);\n}\nfunction qr(msg) {\n  return msg.readUInt8(2) >> 7;\n}\nfunction opcode(msg) {\n  return msg.readUInt8(2) >> 3 & 0x0f;\n}\nfunction aa(msg) {\n  return msg.readUInt8(2) >> 2 & 0x01;\n}\nfunction tc(msg) {\n  return msg.readUInt8(2) >> 1 & 0x01;\n}\nfunction rd(msg) {\n  return msg.readUInt8(2) & 0x01;\n}\nfunction ra(msg) {\n  return msg.readUInt8(3) >> 7;\n}\nfunction ad(msg) {\n  return msg.readUInt8(3) >> 5 & 0x01;\n}\nfunction cd(msg) {\n  return msg.readUInt8(3) >> 4 & 0x01;\n}\nfunction rcode(msg) {\n  return msg.readUInt8(3) & 0x0f;\n}\nfunction record_count(msg, name) {\n  if (name == 'question') return msg.readUInt16BE(4);else if (name == 'answer') return msg.readUInt16BE(6);else if (name == 'authority') return msg.readUInt16BE(8);else if (name == 'additional') return msg.readUInt16BE(10);else throw new Error('Unknown section name: ' + name);\n}\nfunction record_name(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset);\n  return rec.name;\n}\nfunction record_class(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset);\n  return rec.class;\n}\nfunction record_type(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset);\n  return rec.type;\n}\nfunction record_ttl(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset);\n  return rec.ttl;\n}\nfunction record_data(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset);\n  return rec.data;\n}\nfunction record_class(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset);\n  return rec.class;\n}\nfunction record(msg, section_name, offset) {\n  if (typeof offset != 'number' || isNaN(offset) || offset < 0) throw new Error('Offset must be a natural number');\n\n  // Support msg being a previously-parsed sections object.\n  var sects = Buffer.isBuffer(msg) ? sections(msg) : msg;\n  var records = sects[section_name];\n  if (!records) throw new Error('No such section: \"' + section_name + '\"');\n  var rec = records[offset];\n  if (!rec) throw new Error('Bad offset for section \"' + section_name + '\": ' + offset);\n  return rec;\n}\nfunction sections(msg) {\n  // Count the times this message has been parsed, for debugging and testing purposes.\n  if ('__parsed' in msg) msg.__parsed += 1;\n  var position = 12 // First byte of the first section\n    ,\n    result = {\n      'question': [],\n      'answer': [],\n      'authority': [],\n      'additional': []\n    },\n    need = {\n      'question': record_count(msg, 'question'),\n      'answer': record_count(msg, 'answer'),\n      'authority': record_count(msg, 'authority'),\n      'additional': record_count(msg, 'additional')\n    };\n  var states = ['question', 'answer', 'authority', 'additional', 'done'],\n    state = states.shift();\n  while (true) {\n    if (state == 'done') return result;else if (result[state].length == need[state]) state = states.shift();else if (!state) throw new Error('Unknown parsing state at position ' + position + ': ' + JSON.stringify(state));else add_record();\n  }\n  function add_record() {\n    var record = {};\n    var data = domain_parts(msg, position);\n    record.name = data.parts.join('.');\n    position += data.length;\n    record.type = msg.readUInt16BE(position + 0);\n    record.class = msg.readUInt16BE(position + 2);\n    position += 4;\n    if (state != 'question') {\n      record.ttl = msg.readUInt32BE(position + 0);\n      var rdata_len = msg.readUInt16BE(position + 4);\n      position += 6;\n      record.data = msg.slice(position, position + rdata_len);\n      position += rdata_len;\n      if (constants.type(record.type) === 'OPT') {\n        // EDNS\n        if (record.name !== '') throw new Error('EDNS record option for non-root domain: ' + record.name);\n        record.udp_size = record.class;\n        delete record.class;\n        record.extended_rcode = record.ttl >> 24;\n        record.edns_version = record.ttl >> 16 & 0xff;\n        record.zero = record.ttl >> 8;\n        delete record.ttl;\n        record.data = Array.prototype.slice.call(record.data);\n      }\n    }\n    result[state] = result[state] || [];\n    result[state].push(record);\n  }\n}\nfunction mx(msg, data) {\n  return [data.readUInt16BE(0), uncompress(msg, data.slice(2))];\n}\nfunction srv(msg, data) {\n  return {\n    'priority': data.readUInt16BE(0),\n    'weight': data.readUInt16BE(2),\n    'port': data.readUInt16BE(4),\n    'target': uncompress(msg, data.slice(6)) // Techncially compression is not allowed in RFC 2782.\n  };\n}\nfunction soa(msg, data) {\n  var result = domain_parts(msg, data),\n    offset = result.length,\n    mname = result.parts.join('.');\n  result = domain_parts(msg, data.slice(offset));\n  var rname = result.parts.join('.');\n  offset += result.length;\n  return {\n    'mname': mname,\n    'rname': rname //.replace(/\\./, '@')\n    ,\n    'serial': data.readUInt32BE(offset + 0),\n    'refresh': data.readUInt32BE(offset + 4),\n    'retry': data.readUInt32BE(offset + 8),\n    'expire': data.readUInt32BE(offset + 12),\n    'ttl': data.readUInt32BE(offset + 16)\n  };\n}\nfunction txt(msg, data) {\n  var parts = [];\n  while (data.length) {\n    var len = data.readUInt8(0);\n    parts.push(data.slice(1, 1 + len).toString('ascii'));\n    data = data.slice(1 + len);\n  }\n  return parts;\n}\nfunction uncompress(msg, offset) {\n  var data = domain_parts(msg, offset);\n  return data.parts.join('.');\n}\nfunction domain_parts(msg, offset) {\n  if (Buffer.isBuffer(offset)) {\n    var full_message = msg;\n    msg = offset;\n    offset = 0;\n  }\n  if (typeof offset != 'number' || isNaN(offset) || offset < 0 || offset > msg.length) throw new Error('Bad offset: ' + offset);\n  var parts = [],\n    real_length = 0,\n    jumped = false;\n  var i = 0;\n  while (true) {\n    if (++i >= 100) throw new Error('Too many iterations uncompressing name');\n    var byte = msg.readUInt8(offset),\n      flags = byte >> 6,\n      len = byte & 0x3f; // 0 - 63\n\n    offset += 1;\n    add_length(1);\n    if (flags === 0x03) {\n      offset = (len << 8) + msg.readUInt8(offset);\n      add_length(1);\n      jumped = true;\n\n      // If processing so far has just been on some given fragment, begin using the full message now.\n      msg = full_message || msg;\n    } else if (len == 0) return {\n      'parts': parts,\n      'length': real_length\n    };else {\n      parts.push(msg.toString('ascii', offset, offset + len));\n      offset += len;\n      add_length(len);\n    }\n  }\n  function add_length(amount) {\n    if (!jumped) real_length += amount;\n  }\n}","map":{"version":3,"names":["util","require","constants","module","exports","id","qr","aa","tc","rd","ra","ad","cd","rcode","opcode","record_count","record_name","record_class","record_ttl","record_type","record_data","uncompress","sections","mx","srv","soa","txt","msg","readUInt16BE","readUInt8","name","Error","section_name","offset","rec","record","class","type","ttl","data","isNaN","sects","Buffer","isBuffer","records","__parsed","position","result","need","states","state","shift","length","JSON","stringify","add_record","domain_parts","parts","join","readUInt32BE","rdata_len","slice","udp_size","extended_rcode","edns_version","zero","Array","prototype","call","push","mname","rname","len","toString","full_message","real_length","jumped","i","byte","flags","add_length","amount"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/hbo-dnsd/parse.js"],"sourcesContent":["// Copyright 2012 Iris Couch, all rights reserved.\n//\n// Parse DNS messages\n\nvar util = require('util')\n\nvar constants = require('./constants')\n\nmodule.exports = { 'id': id\n                 , 'qr': qr\n                 , 'aa': aa\n                 , 'tc': tc\n                 , 'rd': rd\n                 , 'ra': ra\n                 , 'ad': ad\n                 , 'cd': cd\n                 , 'rcode': rcode\n                 , 'opcode': opcode\n                 , 'record_count': record_count\n                 , 'record_name' : record_name\n                 , 'record_class': record_class\n                 , 'record_ttl'  : record_ttl\n                 , 'record_type' : record_type\n                 , 'record_data' : record_data\n                 , 'uncompress'  : uncompress\n                 , 'sections'    : sections\n                 , 'mx': mx\n                 , 'srv': srv\n                 , 'soa': soa\n                 , 'txt': txt\n                 }\n\n\nfunction id(msg) {\n  return msg.readUInt16BE(0)\n}\n\nfunction qr(msg) {\n  return msg.readUInt8(2) >> 7\n}\n\nfunction opcode(msg) {\n  return (msg.readUInt8(2) >> 3) & 0x0f\n}\n\nfunction aa(msg) {\n  return (msg.readUInt8(2) >> 2) & 0x01\n}\n\nfunction tc(msg) {\n  return (msg.readUInt8(2) >> 1) & 0x01\n}\n\nfunction rd(msg) {\n  return msg.readUInt8(2) & 0x01\n}\n\nfunction ra(msg) {\n  return msg.readUInt8(3) >> 7\n}\n\nfunction ad(msg) {\n  return msg.readUInt8(3) >> 5 & 0x01\n}\n\nfunction cd(msg) {\n  return msg.readUInt8(3) >> 4 & 0x01\n}\n\nfunction rcode(msg) {\n  return msg.readUInt8(3) & 0x0f\n}\n\nfunction record_count(msg, name) {\n  if(name == 'question')\n    return msg.readUInt16BE(4)\n  else if(name == 'answer')\n    return msg.readUInt16BE(6)\n  else if(name == 'authority')\n    return msg.readUInt16BE(8)\n  else if(name == 'additional')\n    return msg.readUInt16BE(10)\n  else\n    throw new Error('Unknown section name: ' + name)\n}\n\nfunction record_name(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset)\n  return rec.name\n}\n\nfunction record_class(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset)\n  return rec.class\n}\n\nfunction record_type(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset)\n  return rec.type\n}\n\nfunction record_ttl(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset)\n  return rec.ttl\n}\n\nfunction record_data(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset)\n  return rec.data\n}\n\nfunction record_class(msg, section_name, offset) {\n  var rec = record(msg, section_name, offset)\n  return rec.class\n}\n\nfunction record(msg, section_name, offset) {\n  if(typeof offset != 'number' || isNaN(offset) || offset < 0)\n    throw new Error('Offset must be a natural number')\n\n  // Support msg being a previously-parsed sections object.\n  var sects = Buffer.isBuffer(msg)\n                ? sections(msg)\n                : msg\n\n  var records = sects[section_name]\n  if(!records)\n    throw new Error('No such section: \"'+section_name+'\"')\n\n  var rec = records[offset]\n  if(!rec)\n    throw new Error('Bad offset for section \"'+section_name+'\": ' + offset)\n\n  return rec\n}\n\nfunction sections(msg) {\n  // Count the times this message has been parsed, for debugging and testing purposes.\n  if('__parsed' in msg)\n    msg.__parsed += 1\n\n  var position = 12 // First byte of the first section\n    , result = {'question':[], 'answer':[], 'authority':[], 'additional':[]}\n    , need = { 'question'  : record_count(msg, 'question')\n             , 'answer'    : record_count(msg, 'answer')\n             , 'authority' : record_count(msg, 'authority')\n             , 'additional': record_count(msg, 'additional')\n             }\n\n  var states = ['question', 'answer', 'authority', 'additional', 'done']\n    , state = states.shift()\n\n  while(true) {\n    if(state == 'done')\n      return result\n    else if(result[state].length == need[state])\n      state = states.shift()\n    else if(!state)\n      throw new Error('Unknown parsing state at position '+position+': '+JSON.stringify(state))\n    else\n      add_record()\n  }\n\n  function add_record() {\n    var record = {}\n\n    var data = domain_parts(msg, position)\n    record.name = data.parts.join('.')\n    position += data.length\n\n    record.type  = msg.readUInt16BE(position + 0)\n    record.class = msg.readUInt16BE(position + 2)\n    position += 4\n\n    if(state != 'question') {\n      record.ttl    = msg.readUInt32BE(position + 0)\n      var rdata_len = msg.readUInt16BE(position + 4)\n\n      position += 6\n      record.data = msg.slice(position, position + rdata_len)\n\n      position += rdata_len\n\n      if(constants.type(record.type) === 'OPT') {\n        // EDNS\n        if(record.name !== '')\n          throw new Error('EDNS record option for non-root domain: ' + record.name)\n\n        record.udp_size = record.class\n        delete record.class\n\n        record.extended_rcode = (record.ttl >> 24)\n        record.edns_version   = (record.ttl >> 16) & 0xff\n        record.zero           = (record.ttl >>  8)\n        delete record.ttl\n\n        record.data = Array.prototype.slice.call(record.data)\n      }\n    }\n\n    result[state] = result[state] || []\n    result[state].push(record)\n  }\n}\n\nfunction mx(msg, data) {\n  return [ data.readUInt16BE(0)\n         , uncompress(msg, data.slice(2))\n         ]\n}\n\nfunction srv(msg, data) {\n  return { 'priority': data.readUInt16BE(0)\n         , 'weight'  : data.readUInt16BE(2)\n         , 'port'    : data.readUInt16BE(4)\n         , 'target'  : uncompress(msg, data.slice(6)) // Techncially compression is not allowed in RFC 2782.\n         }\n}\n\nfunction soa(msg, data) {\n  var result = domain_parts(msg, data)\n    , offset = result.length\n    , mname = result.parts.join('.')\n\n  result = domain_parts(msg, data.slice(offset))\n  var rname = result.parts.join('.')\n  offset += result.length\n\n  return { 'mname'  : mname\n         , 'rname'  : rname //.replace(/\\./, '@')\n         , 'serial' : data.readUInt32BE(offset + 0)\n         , 'refresh': data.readUInt32BE(offset + 4)\n         , 'retry'  : data.readUInt32BE(offset + 8)\n         , 'expire' : data.readUInt32BE(offset + 12)\n         , 'ttl'    : data.readUInt32BE(offset + 16)\n         }\n}\n\nfunction txt(msg, data) {\n  var parts = []\n  while(data.length) {\n    var len = data.readUInt8(0)\n    parts.push(data.slice(1, 1+len).toString('ascii'))\n    data = data.slice(1+len)\n  }\n\n  return parts\n}\n\nfunction uncompress(msg, offset) {\n  var data = domain_parts(msg, offset)\n  return data.parts.join('.')\n}\n\nfunction domain_parts(msg, offset) {\n  if(Buffer.isBuffer(offset)) {\n    var full_message = msg\n    msg = offset\n    offset = 0\n  }\n\n  if(typeof offset != 'number' || isNaN(offset) || offset < 0 || offset > msg.length)\n    throw new Error('Bad offset: ' + offset)\n\n  var parts = []\n    , real_length = 0\n    , jumped = false\n\n  var i = 0\n  while(true) {\n    if(++i >= 100)\n      throw new Error('Too many iterations uncompressing name')\n\n    var byte = msg.readUInt8(offset)\n      , flags = byte >> 6\n      , len   = byte & 0x3f // 0 - 63\n\n    offset += 1\n    add_length(1)\n\n    if(flags === 0x03) {\n      offset = (len << 8) + msg.readUInt8(offset)\n      add_length(1)\n      jumped = true\n\n      // If processing so far has just been on some given fragment, begin using the full message now.\n      msg = full_message || msg\n    }\n\n    else if(len == 0)\n      return {'parts':parts, 'length':real_length}\n\n    else {\n      parts.push(msg.toString('ascii', offset, offset + len))\n\n      offset += len\n      add_length(len)\n    }\n  }\n\n  function add_length(amount) {\n    if(! jumped)\n      real_length += amount\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}