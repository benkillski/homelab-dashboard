{"ast":null,"code":"\"use strict\";\n\nfunction makeException(ErrorType, message, opts = {}) {\n  if (opts.globals) {\n    ErrorType = opts.globals[ErrorType.name];\n  }\n  return new ErrorType(`${opts.context ? opts.context : \"Value\"} ${message}.`);\n}\nfunction toNumber(value, opts = {}) {\n  if (!opts.globals) {\n    return +value;\n  }\n  if (typeof value === \"bigint\") {\n    throw opts.globals.TypeError(\"Cannot convert a BigInt value to a number\");\n  }\n  return opts.globals.Number(value);\n}\nfunction type(V) {\n  if (V === null) {\n    return \"Null\";\n  }\n  switch (typeof V) {\n    case \"undefined\":\n      return \"Undefined\";\n    case \"boolean\":\n      return \"Boolean\";\n    case \"number\":\n      return \"Number\";\n    case \"string\":\n      return \"String\";\n    case \"symbol\":\n      return \"Symbol\";\n    case \"bigint\":\n      return \"BigInt\";\n    case \"object\":\n    // Falls through\n    case \"function\":\n    // Falls through\n    default:\n      // Per ES spec, typeof returns an implemention-defined value that is not any of the existing ones for\n      // uncallable non-standard exotic objects. Yet Type() which the Web IDL spec depends on returns Object for\n      // such cases. So treat the default case as an object.\n      return \"Object\";\n  }\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if (x > 0 && x % 1 === +0.5 && (x & 1) === 0 || x < 0 && x % 1 === -0.5 && (x & 1) === 1) {\n    return censorNegativeZero(Math.floor(x));\n  }\n  return censorNegativeZero(Math.round(x));\n}\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\nfunction createIntegerConversion(bitLength, typeOpts) {\n  const isSigned = !typeOpts.unsigned;\n  let lowerBound;\n  let upperBound;\n  if (bitLength === 64) {\n    upperBound = Number.MAX_SAFE_INTEGER;\n    lowerBound = !isSigned ? 0 : Number.MIN_SAFE_INTEGER;\n  } else if (!isSigned) {\n    lowerBound = 0;\n    upperBound = Math.pow(2, bitLength) - 1;\n  } else {\n    lowerBound = -Math.pow(2, bitLength - 1);\n    upperBound = Math.pow(2, bitLength - 1) - 1;\n  }\n  const twoToTheBitLength = Math.pow(2, bitLength);\n  const twoToOneLessThanTheBitLength = Math.pow(2, bitLength - 1);\n  return (V, opts = {}) => {\n    let x = toNumber(V, opts);\n    x = censorNegativeZero(x);\n    if (opts.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", opts);\n      }\n      x = integerPart(x);\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(TypeError, `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`, opts);\n      }\n      return x;\n    }\n    if (!Number.isNaN(x) && opts.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (isSigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\nfunction createLongLongConversion(bitLength, {\n  unsigned\n}) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n  return (V, opts = {}) => {\n    if (opts === undefined) {\n      opts = {};\n    }\n    let x = toNumber(V, opts);\n    x = censorNegativeZero(x);\n    if (opts.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", opts);\n      }\n      x = integerPart(x);\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(TypeError, `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`, opts);\n      }\n      return x;\n    }\n    if (!Number.isNaN(x) && opts.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\nexports.any = V => {\n  return V;\n};\nexports.void = function () {\n  return undefined;\n};\nexports.boolean = function (val) {\n  return !!val;\n};\nexports.byte = createIntegerConversion(8, {\n  unsigned: false\n});\nexports.octet = createIntegerConversion(8, {\n  unsigned: true\n});\nexports.short = createIntegerConversion(16, {\n  unsigned: false\n});\nexports[\"unsigned short\"] = createIntegerConversion(16, {\n  unsigned: true\n});\nexports.long = createIntegerConversion(32, {\n  unsigned: false\n});\nexports[\"unsigned long\"] = createIntegerConversion(32, {\n  unsigned: true\n});\nexports[\"long long\"] = createLongLongConversion(64, {\n  unsigned: false\n});\nexports[\"unsigned long long\"] = createLongLongConversion(64, {\n  unsigned: true\n});\nexports.double = (V, opts) => {\n  const x = toNumber(V, opts);\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", opts);\n  }\n  return x;\n};\nexports[\"unrestricted double\"] = (V, opts) => {\n  const x = toNumber(V, opts);\n  return x;\n};\nexports.float = (V, opts) => {\n  const x = toNumber(V, opts);\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", opts);\n  }\n  if (Object.is(x, -0)) {\n    return x;\n  }\n  const y = Math.fround(x);\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", opts);\n  }\n  return y;\n};\nexports[\"unrestricted float\"] = (V, opts) => {\n  const x = toNumber(V, opts);\n  if (isNaN(x)) {\n    return x;\n  }\n  if (Object.is(x, -0)) {\n    return x;\n  }\n  return Math.fround(x);\n};\nexports.DOMString = function (V, opts = {}) {\n  if (opts.treatNullAsEmptyString && V === null) {\n    return \"\";\n  }\n  if (typeof V === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", opts);\n  }\n  const StringCtor = opts.globals ? opts.globals.String : String;\n  return StringCtor(V);\n};\nexports.ByteString = (V, opts) => {\n  const x = exports.DOMString(V, opts);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", opts);\n    }\n  }\n  return x;\n};\nexports.USVString = (V, opts) => {\n  const S = exports.DOMString(V, opts);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n  return U.join(\"\");\n};\nexports.object = (V, opts) => {\n  if (type(V) !== \"Object\") {\n    throw makeException(TypeError, \"is not an object\", opts);\n  }\n  return V;\n};\n\n// Not exported, but used in Function and VoidFunction.\n\n// Neither Function nor VoidFunction is defined with [TreatNonObjectAsNull], so\n// handling for that is omitted.\nfunction convertCallbackFunction(V, opts) {\n  if (typeof V !== \"function\") {\n    throw makeException(TypeError, \"is not a function\", opts);\n  }\n  return V;\n}\nconst abByteLengthGetter = Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter = Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get;\nfunction isNonSharedArrayBuffer(V) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(V);\n    return true;\n  } catch {\n    return false;\n  }\n}\nfunction isSharedArrayBuffer(V) {\n  try {\n    sabByteLengthGetter.call(V);\n    return true;\n  } catch {\n    return false;\n  }\n}\nfunction isArrayBufferDetached(V) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(V);\n    return false;\n  } catch {\n    return true;\n  }\n}\nexports.ArrayBuffer = (V, opts = {}) => {\n  if (!isNonSharedArrayBuffer(V)) {\n    if (opts.allowShared && !isSharedArrayBuffer(V)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", opts);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", opts);\n  }\n  if (isArrayBufferDetached(V)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", opts);\n  }\n  return V;\n};\nconst dvByteLengthGetter = Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (V, opts = {}) => {\n  try {\n    dvByteLengthGetter.call(V);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", opts);\n  }\n  if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", opts);\n  }\n  if (isArrayBufferDetached(V.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", opts);\n  }\n  return V;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Uint8Array).prototype, Symbol.toStringTag).get;\n[Int8Array, Int16Array, Int32Array, Uint8Array, Uint16Array, Uint32Array, Uint8ClampedArray, Float32Array, Float64Array].forEach(func => {\n  const name = func.name;\n  const article = /^[AEIOU]/.test(name) ? \"an\" : \"a\";\n  exports[name] = (V, opts = {}) => {\n    if (!ArrayBuffer.isView(V) || typedArrayNameGetter.call(V) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, opts);\n    }\n    if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", opts);\n    }\n    if (isArrayBufferDetached(V.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", opts);\n    }\n    return V;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (V, opts = {}) => {\n  if (!ArrayBuffer.isView(V)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", opts);\n  }\n  if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", opts);\n  }\n  if (isArrayBufferDetached(V.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", opts);\n  }\n  return V;\n};\nexports.BufferSource = (V, opts = {}) => {\n  if (ArrayBuffer.isView(V)) {\n    if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", opts);\n    }\n    if (isArrayBufferDetached(V.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", opts);\n    }\n    return V;\n  }\n  if (!opts.allowShared && !isNonSharedArrayBuffer(V)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", opts);\n  }\n  if (opts.allowShared && !isSharedArrayBuffer(V) && !isNonSharedArrayBuffer(V)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBufer, or a view on one\", opts);\n  }\n  if (isArrayBufferDetached(V)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", opts);\n  }\n  return V;\n};\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\nexports.Function = convertCallbackFunction;\nexports.VoidFunction = convertCallbackFunction;","map":{"version":3,"names":["makeException","ErrorType","message","opts","globals","name","context","toNumber","value","TypeError","Number","type","V","evenRound","x","censorNegativeZero","Math","floor","round","integerPart","n","trunc","sign","modulo","y","signMightNotMatch","createIntegerConversion","bitLength","typeOpts","isSigned","unsigned","lowerBound","upperBound","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","pow","twoToTheBitLength","twoToOneLessThanTheBitLength","enforceRange","isFinite","isNaN","clamp","min","max","createLongLongConversion","asBigIntN","BigInt","asUintN","asIntN","undefined","xBigInt","exports","any","void","boolean","val","byte","octet","short","long","double","float","Object","is","fround","DOMString","treatNullAsEmptyString","StringCtor","String","ByteString","c","i","codePointAt","USVString","S","length","U","charCodeAt","push","fromCodePoint","d","a","b","join","object","convertCallbackFunction","abByteLengthGetter","getOwnPropertyDescriptor","ArrayBuffer","prototype","get","sabByteLengthGetter","SharedArrayBuffer","isNonSharedArrayBuffer","call","isSharedArrayBuffer","isArrayBufferDetached","Uint8Array","allowShared","dvByteLengthGetter","DataView","e","buffer","typedArrayNameGetter","getPrototypeOf","Symbol","toStringTag","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Uint8ClampedArray","Float32Array","Float64Array","forEach","func","article","test","isView","ArrayBufferView","BufferSource","DOMTimeStamp","Function","VoidFunction"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/webidl-conversions/lib/index.js"],"sourcesContent":["\"use strict\";\n\nfunction makeException(ErrorType, message, opts = {}) {\n    if (opts.globals) {\n        ErrorType = opts.globals[ErrorType.name];\n    }\n    return new ErrorType(`${opts.context ? opts.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, opts = {}) {\n    if (!opts.globals) {\n        return +value;\n    }\n    if (typeof value === \"bigint\") {\n        throw opts.globals.TypeError(\"Cannot convert a BigInt value to a number\");\n    }\n    return opts.globals.Number(value);\n}\n\nfunction type(V) {\n    if (V === null) {\n        return \"Null\";\n    }\n    switch (typeof V) {\n        case \"undefined\":\n            return \"Undefined\";\n        case \"boolean\":\n            return \"Boolean\";\n        case \"number\":\n            return \"Number\";\n        case \"string\":\n            return \"String\";\n        case \"symbol\":\n            return \"Symbol\";\n        case \"bigint\":\n            return \"BigInt\";\n        case \"object\":\n            // Falls through\n        case \"function\":\n            // Falls through\n        default:\n            // Per ES spec, typeof returns an implemention-defined value that is not any of the existing ones for\n            // uncallable non-standard exotic objects. Yet Type() which the Web IDL spec depends on returns Object for\n            // such cases. So treat the default case as an object.\n            return \"Object\";\n    }\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n    // There are four cases for numbers with fractional part being .5:\n    //\n    // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n    //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n    //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n    //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n    //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n    // (where n is a non-negative integer)\n    //\n    // Branch here for cases 1 and 4\n    if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n        return censorNegativeZero(Math.floor(x));\n    }\n\n    return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n    return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n    // https://tc39.github.io/ecma262/#eqn-modulo\n    // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n    const signMightNotMatch = x % y;\n    if (sign(y) !== sign(signMightNotMatch)) {\n        return signMightNotMatch + y;\n    }\n    return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n    return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, typeOpts) {\n    const isSigned = !typeOpts.unsigned;\n\n    let lowerBound;\n    let upperBound;\n    if (bitLength === 64) {\n        upperBound = Number.MAX_SAFE_INTEGER;\n        lowerBound = !isSigned ? 0 : Number.MIN_SAFE_INTEGER;\n    } else if (!isSigned) {\n        lowerBound = 0;\n        upperBound = Math.pow(2, bitLength) - 1;\n    } else {\n        lowerBound = -Math.pow(2, bitLength - 1);\n        upperBound = Math.pow(2, bitLength - 1) - 1;\n    }\n\n    const twoToTheBitLength = Math.pow(2, bitLength);\n    const twoToOneLessThanTheBitLength = Math.pow(2, bitLength - 1);\n\n    return (V, opts = {}) => {\n        let x = toNumber(V, opts);\n        x = censorNegativeZero(x);\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw makeException(TypeError, \"is not a finite number\", opts);\n            }\n\n            x = integerPart(x);\n\n            if (x < lowerBound || x > upperBound) {\n                throw makeException(TypeError,\n                    `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`, opts);\n            }\n\n            return x;\n        }\n\n        if (!Number.isNaN(x) && opts.clamp) {\n            x = Math.min(Math.max(x, lowerBound), upperBound);\n            x = evenRound(x);\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n        x = integerPart(x);\n\n        // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n        // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n        if (x >= lowerBound && x <= upperBound) {\n            return x;\n        }\n\n        // These will not work great for bitLength of 64, but oh well. See the README for more details.\n        x = modulo(x, twoToTheBitLength);\n        if (isSigned && x >= twoToOneLessThanTheBitLength) {\n            return x - twoToTheBitLength;\n        }\n        return x;\n    };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n    const upperBound = Number.MAX_SAFE_INTEGER;\n    const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n    const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n    return (V, opts = {}) => {\n        if (opts === undefined) {\n            opts = {};\n        }\n\n        let x = toNumber(V, opts);\n        x = censorNegativeZero(x);\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw makeException(TypeError, \"is not a finite number\", opts);\n            }\n\n            x = integerPart(x);\n\n            if (x < lowerBound || x > upperBound) {\n                throw makeException(TypeError,\n                    `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`, opts);\n            }\n\n            return x;\n        }\n\n        if (!Number.isNaN(x) && opts.clamp) {\n            x = Math.min(Math.max(x, lowerBound), upperBound);\n            x = evenRound(x);\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        let xBigInt = BigInt(integerPart(x));\n        xBigInt = asBigIntN(bitLength, xBigInt);\n        return Number(xBigInt);\n    };\n}\n\nexports.any = V => {\n    return V;\n};\n\nexports.void = function () {\n    return undefined;\n};\n\nexports.boolean = function (val) {\n    return !!val;\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (V, opts) => {\n    const x = toNumber(V, opts);\n\n    if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite floating-point value\", opts);\n    }\n\n    return x;\n};\n\nexports[\"unrestricted double\"] = (V, opts) => {\n    const x = toNumber(V, opts);\n\n    return x;\n};\n\nexports.float = (V, opts) => {\n    const x = toNumber(V, opts);\n\n    if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite floating-point value\", opts);\n    }\n\n    if (Object.is(x, -0)) {\n        return x;\n    }\n\n    const y = Math.fround(x);\n\n    if (!Number.isFinite(y)) {\n        throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", opts);\n    }\n\n    return y;\n};\n\nexports[\"unrestricted float\"] = (V, opts) => {\n    const x = toNumber(V, opts);\n\n    if (isNaN(x)) {\n        return x;\n    }\n\n    if (Object.is(x, -0)) {\n        return x;\n    }\n\n    return Math.fround(x);\n};\n\nexports.DOMString = function (V, opts = {}) {\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    if (typeof V === \"symbol\") {\n        throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", opts);\n    }\n\n    const StringCtor = opts.globals ? opts.globals.String : String;\n    return StringCtor(V);\n};\n\nexports.ByteString = (V, opts) => {\n    const x = exports.DOMString(V, opts);\n    let c;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw makeException(TypeError, \"is not a valid ByteString\", opts);\n        }\n    }\n\n    return x;\n};\n\nexports.USVString = (V, opts) => {\n    const S = exports.DOMString(V, opts);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else if (i === n - 1) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            const d = S.charCodeAt(i + 1);\n            if (0xDC00 <= d && d <= 0xDFFF) {\n                const a = c & 0x3FF;\n                const b = d & 0x3FF;\n                U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n                ++i;\n            } else {\n                U.push(String.fromCodePoint(0xFFFD));\n            }\n        }\n    }\n\n    return U.join(\"\");\n};\n\nexports.object = (V, opts) => {\n    if (type(V) !== \"Object\") {\n        throw makeException(TypeError, \"is not an object\", opts);\n    }\n\n    return V;\n};\n\n// Not exported, but used in Function and VoidFunction.\n\n// Neither Function nor VoidFunction is defined with [TreatNonObjectAsNull], so\n// handling for that is omitted.\nfunction convertCallbackFunction(V, opts) {\n    if (typeof V !== \"function\") {\n        throw makeException(TypeError, \"is not a function\", opts);\n    }\n    return V;\n}\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get;\n\nfunction isNonSharedArrayBuffer(V) {\n    try {\n        // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n        // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n        abByteLengthGetter.call(V);\n\n        return true;\n    } catch {\n        return false;\n    }\n}\n\nfunction isSharedArrayBuffer(V) {\n    try {\n        sabByteLengthGetter.call(V);\n        return true;\n    } catch {\n        return false;\n    }\n}\n\nfunction isArrayBufferDetached(V) {\n    try {\n        // eslint-disable-next-line no-new\n        new Uint8Array(V);\n        return false;\n    } catch {\n        return true;\n    }\n}\n\nexports.ArrayBuffer = (V, opts = {}) => {\n    if (!isNonSharedArrayBuffer(V)) {\n        if (opts.allowShared && !isSharedArrayBuffer(V)) {\n            throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", opts);\n        }\n        throw makeException(TypeError, \"is not an ArrayBuffer\", opts);\n    }\n    if (isArrayBufferDetached(V)) {\n        throw makeException(TypeError, \"is a detached ArrayBuffer\", opts);\n    }\n\n    return V;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (V, opts = {}) => {\n    try {\n        dvByteLengthGetter.call(V);\n    } catch (e) {\n        throw makeException(TypeError, \"is not a DataView\", opts);\n    }\n\n    if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n        throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", opts);\n    }\n    if (isArrayBufferDetached(V.buffer)) {\n        throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", opts);\n    }\n\n    return V;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(Uint8Array).prototype,\n    Symbol.toStringTag\n).get;\n[\n    Int8Array, Int16Array, Int32Array, Uint8Array,\n    Uint16Array, Uint32Array, Uint8ClampedArray, Float32Array, Float64Array\n].forEach(func => {\n    const name = func.name;\n    const article = /^[AEIOU]/.test(name) ? \"an\" : \"a\";\n    exports[name] = (V, opts = {}) => {\n        if (!ArrayBuffer.isView(V) || typedArrayNameGetter.call(V) !== name) {\n            throw makeException(TypeError, `is not ${article} ${name} object`, opts);\n        }\n        if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n            throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", opts);\n        }\n        if (isArrayBufferDetached(V.buffer)) {\n            throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", opts);\n        }\n\n        return V;\n    };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (V, opts = {}) => {\n    if (!ArrayBuffer.isView(V)) {\n        throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", opts);\n    }\n\n    if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n        throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", opts);\n    }\n\n    if (isArrayBufferDetached(V.buffer)) {\n        throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", opts);\n    }\n    return V;\n};\n\nexports.BufferSource = (V, opts = {}) => {\n    if (ArrayBuffer.isView(V)) {\n        if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n            throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", opts);\n        }\n\n        if (isArrayBufferDetached(V.buffer)) {\n            throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", opts);\n        }\n        return V;\n    }\n\n    if (!opts.allowShared && !isNonSharedArrayBuffer(V)) {\n        throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", opts);\n    }\n    if (opts.allowShared && !isSharedArrayBuffer(V) && !isNonSharedArrayBuffer(V)) {\n        throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBufer, or a view on one\", opts);\n    }\n    if (isArrayBufferDetached(V)) {\n        throw makeException(TypeError, \"is a detached ArrayBuffer\", opts);\n    }\n\n    return V;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n\nexports.Function = convertCallbackFunction;\n\nexports.VoidFunction = convertCallbackFunction;\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,aAAaA,CAACC,SAAS,EAAEC,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAClD,IAAIA,IAAI,CAACC,OAAO,EAAE;IACdH,SAAS,GAAGE,IAAI,CAACC,OAAO,CAACH,SAAS,CAACI,IAAI,CAAC;EAC5C;EACA,OAAO,IAAIJ,SAAS,CAAE,GAAEE,IAAI,CAACG,OAAO,GAAGH,IAAI,CAACG,OAAO,GAAG,OAAQ,IAAGJ,OAAQ,GAAE,CAAC;AAChF;AAEA,SAASK,QAAQA,CAACC,KAAK,EAAEL,IAAI,GAAG,CAAC,CAAC,EAAE;EAChC,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;IACf,OAAO,CAACI,KAAK;EACjB;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAML,IAAI,CAACC,OAAO,CAACK,SAAS,CAAC,2CAA2C,CAAC;EAC7E;EACA,OAAON,IAAI,CAACC,OAAO,CAACM,MAAM,CAACF,KAAK,CAAC;AACrC;AAEA,SAASG,IAAIA,CAACC,CAAC,EAAE;EACb,IAAIA,CAAC,KAAK,IAAI,EAAE;IACZ,OAAO,MAAM;EACjB;EACA,QAAQ,OAAOA,CAAC;IACZ,KAAK,WAAW;MACZ,OAAO,WAAW;IACtB,KAAK,SAAS;MACV,OAAO,SAAS;IACpB,KAAK,QAAQ;MACT,OAAO,QAAQ;IACnB,KAAK,QAAQ;MACT,OAAO,QAAQ;IACnB,KAAK,QAAQ;MACT,OAAO,QAAQ;IACnB,KAAK,QAAQ;MACT,OAAO,QAAQ;IACnB,KAAK,QAAQ;IACT;IACJ,KAAK,UAAU;IACX;IACJ;MACI;MACA;MACA;MACA,OAAO,QAAQ;EACvB;AACJ;;AAEA;AACA,SAASC,SAASA,CAACC,CAAC,EAAE;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAKA,CAAC,GAAG,CAAC,IAAKA,CAAC,GAAG,CAAC,KAAM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,CAAC,MAAM,CAAC,IAC1CA,CAAC,GAAG,CAAC,IAAKA,CAAC,GAAG,CAAC,KAAM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,CAAC,MAAM,CAAE,EAAE;IAC9C,OAAOC,kBAAkB,CAACC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC,CAAC;EAC5C;EAEA,OAAOC,kBAAkB,CAACC,IAAI,CAACE,KAAK,CAACJ,CAAC,CAAC,CAAC;AAC5C;AAEA,SAASK,WAAWA,CAACC,CAAC,EAAE;EACpB,OAAOL,kBAAkB,CAACC,IAAI,CAACK,KAAK,CAACD,CAAC,CAAC,CAAC;AAC5C;AAEA,SAASE,IAAIA,CAACR,CAAC,EAAE;EACb,OAAOA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACzB;AAEA,SAASS,MAAMA,CAACT,CAAC,EAAEU,CAAC,EAAE;EAClB;EACA;EACA,MAAMC,iBAAiB,GAAGX,CAAC,GAAGU,CAAC;EAC/B,IAAIF,IAAI,CAACE,CAAC,CAAC,KAAKF,IAAI,CAACG,iBAAiB,CAAC,EAAE;IACrC,OAAOA,iBAAiB,GAAGD,CAAC;EAChC;EACA,OAAOC,iBAAiB;AAC5B;AAEA,SAASV,kBAAkBA,CAACD,CAAC,EAAE;EAC3B,OAAOA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGA,CAAC;AAC1B;AAEA,SAASY,uBAAuBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EAClD,MAAMC,QAAQ,GAAG,CAACD,QAAQ,CAACE,QAAQ;EAEnC,IAAIC,UAAU;EACd,IAAIC,UAAU;EACd,IAAIL,SAAS,KAAK,EAAE,EAAE;IAClBK,UAAU,GAAGtB,MAAM,CAACuB,gBAAgB;IACpCF,UAAU,GAAG,CAACF,QAAQ,GAAG,CAAC,GAAGnB,MAAM,CAACwB,gBAAgB;EACxD,CAAC,MAAM,IAAI,CAACL,QAAQ,EAAE;IAClBE,UAAU,GAAG,CAAC;IACdC,UAAU,GAAGhB,IAAI,CAACmB,GAAG,CAAC,CAAC,EAAER,SAAS,CAAC,GAAG,CAAC;EAC3C,CAAC,MAAM;IACHI,UAAU,GAAG,CAACf,IAAI,CAACmB,GAAG,CAAC,CAAC,EAAER,SAAS,GAAG,CAAC,CAAC;IACxCK,UAAU,GAAGhB,IAAI,CAACmB,GAAG,CAAC,CAAC,EAAER,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC;EAC/C;EAEA,MAAMS,iBAAiB,GAAGpB,IAAI,CAACmB,GAAG,CAAC,CAAC,EAAER,SAAS,CAAC;EAChD,MAAMU,4BAA4B,GAAGrB,IAAI,CAACmB,GAAG,CAAC,CAAC,EAAER,SAAS,GAAG,CAAC,CAAC;EAE/D,OAAO,CAACf,CAAC,EAAET,IAAI,GAAG,CAAC,CAAC,KAAK;IACrB,IAAIW,CAAC,GAAGP,QAAQ,CAACK,CAAC,EAAET,IAAI,CAAC;IACzBW,CAAC,GAAGC,kBAAkB,CAACD,CAAC,CAAC;IAEzB,IAAIX,IAAI,CAACmC,YAAY,EAAE;MACnB,IAAI,CAAC5B,MAAM,CAAC6B,QAAQ,CAACzB,CAAC,CAAC,EAAE;QACrB,MAAMd,aAAa,CAACS,SAAS,EAAE,wBAAwB,EAAEN,IAAI,CAAC;MAClE;MAEAW,CAAC,GAAGK,WAAW,CAACL,CAAC,CAAC;MAElB,IAAIA,CAAC,GAAGiB,UAAU,IAAIjB,CAAC,GAAGkB,UAAU,EAAE;QAClC,MAAMhC,aAAa,CAACS,SAAS,EACxB,oCAAmCsB,UAAW,OAAMC,UAAW,aAAY,EAAE7B,IAAI,CAAC;MAC3F;MAEA,OAAOW,CAAC;IACZ;IAEA,IAAI,CAACJ,MAAM,CAAC8B,KAAK,CAAC1B,CAAC,CAAC,IAAIX,IAAI,CAACsC,KAAK,EAAE;MAChC3B,CAAC,GAAGE,IAAI,CAAC0B,GAAG,CAAC1B,IAAI,CAAC2B,GAAG,CAAC7B,CAAC,EAAEiB,UAAU,CAAC,EAAEC,UAAU,CAAC;MACjDlB,CAAC,GAAGD,SAAS,CAACC,CAAC,CAAC;MAChB,OAAOA,CAAC;IACZ;IAEA,IAAI,CAACJ,MAAM,CAAC6B,QAAQ,CAACzB,CAAC,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAE;MAChC,OAAO,CAAC;IACZ;IACAA,CAAC,GAAGK,WAAW,CAACL,CAAC,CAAC;;IAElB;IACA;IACA,IAAIA,CAAC,IAAIiB,UAAU,IAAIjB,CAAC,IAAIkB,UAAU,EAAE;MACpC,OAAOlB,CAAC;IACZ;;IAEA;IACAA,CAAC,GAAGS,MAAM,CAACT,CAAC,EAAEsB,iBAAiB,CAAC;IAChC,IAAIP,QAAQ,IAAIf,CAAC,IAAIuB,4BAA4B,EAAE;MAC/C,OAAOvB,CAAC,GAAGsB,iBAAiB;IAChC;IACA,OAAOtB,CAAC;EACZ,CAAC;AACL;AAEA,SAAS8B,wBAAwBA,CAACjB,SAAS,EAAE;EAAEG;AAAS,CAAC,EAAE;EACvD,MAAME,UAAU,GAAGtB,MAAM,CAACuB,gBAAgB;EAC1C,MAAMF,UAAU,GAAGD,QAAQ,GAAG,CAAC,GAAGpB,MAAM,CAACwB,gBAAgB;EACzD,MAAMW,SAAS,GAAGf,QAAQ,GAAGgB,MAAM,CAACC,OAAO,GAAGD,MAAM,CAACE,MAAM;EAE3D,OAAO,CAACpC,CAAC,EAAET,IAAI,GAAG,CAAC,CAAC,KAAK;IACrB,IAAIA,IAAI,KAAK8C,SAAS,EAAE;MACpB9C,IAAI,GAAG,CAAC,CAAC;IACb;IAEA,IAAIW,CAAC,GAAGP,QAAQ,CAACK,CAAC,EAAET,IAAI,CAAC;IACzBW,CAAC,GAAGC,kBAAkB,CAACD,CAAC,CAAC;IAEzB,IAAIX,IAAI,CAACmC,YAAY,EAAE;MACnB,IAAI,CAAC5B,MAAM,CAAC6B,QAAQ,CAACzB,CAAC,CAAC,EAAE;QACrB,MAAMd,aAAa,CAACS,SAAS,EAAE,wBAAwB,EAAEN,IAAI,CAAC;MAClE;MAEAW,CAAC,GAAGK,WAAW,CAACL,CAAC,CAAC;MAElB,IAAIA,CAAC,GAAGiB,UAAU,IAAIjB,CAAC,GAAGkB,UAAU,EAAE;QAClC,MAAMhC,aAAa,CAACS,SAAS,EACxB,oCAAmCsB,UAAW,OAAMC,UAAW,aAAY,EAAE7B,IAAI,CAAC;MAC3F;MAEA,OAAOW,CAAC;IACZ;IAEA,IAAI,CAACJ,MAAM,CAAC8B,KAAK,CAAC1B,CAAC,CAAC,IAAIX,IAAI,CAACsC,KAAK,EAAE;MAChC3B,CAAC,GAAGE,IAAI,CAAC0B,GAAG,CAAC1B,IAAI,CAAC2B,GAAG,CAAC7B,CAAC,EAAEiB,UAAU,CAAC,EAAEC,UAAU,CAAC;MACjDlB,CAAC,GAAGD,SAAS,CAACC,CAAC,CAAC;MAChB,OAAOA,CAAC;IACZ;IAEA,IAAI,CAACJ,MAAM,CAAC6B,QAAQ,CAACzB,CAAC,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAE;MAChC,OAAO,CAAC;IACZ;IAEA,IAAIoC,OAAO,GAAGJ,MAAM,CAAC3B,WAAW,CAACL,CAAC,CAAC,CAAC;IACpCoC,OAAO,GAAGL,SAAS,CAAClB,SAAS,EAAEuB,OAAO,CAAC;IACvC,OAAOxC,MAAM,CAACwC,OAAO,CAAC;EAC1B,CAAC;AACL;AAEAC,OAAO,CAACC,GAAG,GAAGxC,CAAC,IAAI;EACf,OAAOA,CAAC;AACZ,CAAC;AAEDuC,OAAO,CAACE,IAAI,GAAG,YAAY;EACvB,OAAOJ,SAAS;AACpB,CAAC;AAEDE,OAAO,CAACG,OAAO,GAAG,UAAUC,GAAG,EAAE;EAC7B,OAAO,CAAC,CAACA,GAAG;AAChB,CAAC;AAEDJ,OAAO,CAACK,IAAI,GAAG9B,uBAAuB,CAAC,CAAC,EAAE;EAAEI,QAAQ,EAAE;AAAM,CAAC,CAAC;AAC9DqB,OAAO,CAACM,KAAK,GAAG/B,uBAAuB,CAAC,CAAC,EAAE;EAAEI,QAAQ,EAAE;AAAK,CAAC,CAAC;AAE9DqB,OAAO,CAACO,KAAK,GAAGhC,uBAAuB,CAAC,EAAE,EAAE;EAAEI,QAAQ,EAAE;AAAM,CAAC,CAAC;AAChEqB,OAAO,CAAC,gBAAgB,CAAC,GAAGzB,uBAAuB,CAAC,EAAE,EAAE;EAAEI,QAAQ,EAAE;AAAK,CAAC,CAAC;AAE3EqB,OAAO,CAACQ,IAAI,GAAGjC,uBAAuB,CAAC,EAAE,EAAE;EAAEI,QAAQ,EAAE;AAAM,CAAC,CAAC;AAC/DqB,OAAO,CAAC,eAAe,CAAC,GAAGzB,uBAAuB,CAAC,EAAE,EAAE;EAAEI,QAAQ,EAAE;AAAK,CAAC,CAAC;AAE1EqB,OAAO,CAAC,WAAW,CAAC,GAAGP,wBAAwB,CAAC,EAAE,EAAE;EAAEd,QAAQ,EAAE;AAAM,CAAC,CAAC;AACxEqB,OAAO,CAAC,oBAAoB,CAAC,GAAGP,wBAAwB,CAAC,EAAE,EAAE;EAAEd,QAAQ,EAAE;AAAK,CAAC,CAAC;AAEhFqB,OAAO,CAACS,MAAM,GAAG,CAAChD,CAAC,EAAET,IAAI,KAAK;EAC1B,MAAMW,CAAC,GAAGP,QAAQ,CAACK,CAAC,EAAET,IAAI,CAAC;EAE3B,IAAI,CAACO,MAAM,CAAC6B,QAAQ,CAACzB,CAAC,CAAC,EAAE;IACrB,MAAMd,aAAa,CAACS,SAAS,EAAE,sCAAsC,EAAEN,IAAI,CAAC;EAChF;EAEA,OAAOW,CAAC;AACZ,CAAC;AAEDqC,OAAO,CAAC,qBAAqB,CAAC,GAAG,CAACvC,CAAC,EAAET,IAAI,KAAK;EAC1C,MAAMW,CAAC,GAAGP,QAAQ,CAACK,CAAC,EAAET,IAAI,CAAC;EAE3B,OAAOW,CAAC;AACZ,CAAC;AAEDqC,OAAO,CAACU,KAAK,GAAG,CAACjD,CAAC,EAAET,IAAI,KAAK;EACzB,MAAMW,CAAC,GAAGP,QAAQ,CAACK,CAAC,EAAET,IAAI,CAAC;EAE3B,IAAI,CAACO,MAAM,CAAC6B,QAAQ,CAACzB,CAAC,CAAC,EAAE;IACrB,MAAMd,aAAa,CAACS,SAAS,EAAE,sCAAsC,EAAEN,IAAI,CAAC;EAChF;EAEA,IAAI2D,MAAM,CAACC,EAAE,CAACjD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAClB,OAAOA,CAAC;EACZ;EAEA,MAAMU,CAAC,GAAGR,IAAI,CAACgD,MAAM,CAAClD,CAAC,CAAC;EAExB,IAAI,CAACJ,MAAM,CAAC6B,QAAQ,CAACf,CAAC,CAAC,EAAE;IACrB,MAAMxB,aAAa,CAACS,SAAS,EAAE,iEAAiE,EAAEN,IAAI,CAAC;EAC3G;EAEA,OAAOqB,CAAC;AACZ,CAAC;AAED2B,OAAO,CAAC,oBAAoB,CAAC,GAAG,CAACvC,CAAC,EAAET,IAAI,KAAK;EACzC,MAAMW,CAAC,GAAGP,QAAQ,CAACK,CAAC,EAAET,IAAI,CAAC;EAE3B,IAAIqC,KAAK,CAAC1B,CAAC,CAAC,EAAE;IACV,OAAOA,CAAC;EACZ;EAEA,IAAIgD,MAAM,CAACC,EAAE,CAACjD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAClB,OAAOA,CAAC;EACZ;EAEA,OAAOE,IAAI,CAACgD,MAAM,CAAClD,CAAC,CAAC;AACzB,CAAC;AAEDqC,OAAO,CAACc,SAAS,GAAG,UAAUrD,CAAC,EAAET,IAAI,GAAG,CAAC,CAAC,EAAE;EACxC,IAAIA,IAAI,CAAC+D,sBAAsB,IAAItD,CAAC,KAAK,IAAI,EAAE;IAC3C,OAAO,EAAE;EACb;EAEA,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IACvB,MAAMZ,aAAa,CAACS,SAAS,EAAE,oDAAoD,EAAEN,IAAI,CAAC;EAC9F;EAEA,MAAMgE,UAAU,GAAGhE,IAAI,CAACC,OAAO,GAAGD,IAAI,CAACC,OAAO,CAACgE,MAAM,GAAGA,MAAM;EAC9D,OAAOD,UAAU,CAACvD,CAAC,CAAC;AACxB,CAAC;AAEDuC,OAAO,CAACkB,UAAU,GAAG,CAACzD,CAAC,EAAET,IAAI,KAAK;EAC9B,MAAMW,CAAC,GAAGqC,OAAO,CAACc,SAAS,CAACrD,CAAC,EAAET,IAAI,CAAC;EACpC,IAAImE,CAAC;EACL,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAE,CAACD,CAAC,GAAGxD,CAAC,CAAC0D,WAAW,CAACD,CAAC,CAAC,MAAMtB,SAAS,EAAE,EAAEsB,CAAC,EAAE;IACvD,IAAID,CAAC,GAAG,GAAG,EAAE;MACT,MAAMtE,aAAa,CAACS,SAAS,EAAE,2BAA2B,EAAEN,IAAI,CAAC;IACrE;EACJ;EAEA,OAAOW,CAAC;AACZ,CAAC;AAEDqC,OAAO,CAACsB,SAAS,GAAG,CAAC7D,CAAC,EAAET,IAAI,KAAK;EAC7B,MAAMuE,CAAC,GAAGvB,OAAO,CAACc,SAAS,CAACrD,CAAC,EAAET,IAAI,CAAC;EACpC,MAAMiB,CAAC,GAAGsD,CAAC,CAACC,MAAM;EAClB,MAAMC,CAAC,GAAG,EAAE;EACZ,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnD,CAAC,EAAE,EAAEmD,CAAC,EAAE;IACxB,MAAMD,CAAC,GAAGI,CAAC,CAACG,UAAU,CAACN,CAAC,CAAC;IACzB,IAAID,CAAC,GAAG,MAAM,IAAIA,CAAC,GAAG,MAAM,EAAE;MAC1BM,CAAC,CAACE,IAAI,CAACV,MAAM,CAACW,aAAa,CAACT,CAAC,CAAC,CAAC;IACnC,CAAC,MAAM,IAAI,MAAM,IAAIA,CAAC,IAAIA,CAAC,IAAI,MAAM,EAAE;MACnCM,CAAC,CAACE,IAAI,CAACV,MAAM,CAACW,aAAa,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC,MAAM,IAAIR,CAAC,KAAKnD,CAAC,GAAG,CAAC,EAAE;MACpBwD,CAAC,CAACE,IAAI,CAACV,MAAM,CAACW,aAAa,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC,MAAM;MACH,MAAMC,CAAC,GAAGN,CAAC,CAACG,UAAU,CAACN,CAAC,GAAG,CAAC,CAAC;MAC7B,IAAI,MAAM,IAAIS,CAAC,IAAIA,CAAC,IAAI,MAAM,EAAE;QAC5B,MAAMC,CAAC,GAAGX,CAAC,GAAG,KAAK;QACnB,MAAMY,CAAC,GAAGF,CAAC,GAAG,KAAK;QACnBJ,CAAC,CAACE,IAAI,CAACV,MAAM,CAACW,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,IAAK,CAAC,CAAC,IAAI,CAAC,IAAIE,CAAE,GAAGC,CAAC,CAAC,CAAC;QAC5D,EAAEX,CAAC;MACP,CAAC,MAAM;QACHK,CAAC,CAACE,IAAI,CAACV,MAAM,CAACW,aAAa,CAAC,MAAM,CAAC,CAAC;MACxC;IACJ;EACJ;EAEA,OAAOH,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC;AACrB,CAAC;AAEDhC,OAAO,CAACiC,MAAM,GAAG,CAACxE,CAAC,EAAET,IAAI,KAAK;EAC1B,IAAIQ,IAAI,CAACC,CAAC,CAAC,KAAK,QAAQ,EAAE;IACtB,MAAMZ,aAAa,CAACS,SAAS,EAAE,kBAAkB,EAAEN,IAAI,CAAC;EAC5D;EAEA,OAAOS,CAAC;AACZ,CAAC;;AAED;;AAEA;AACA;AACA,SAASyE,uBAAuBA,CAACzE,CAAC,EAAET,IAAI,EAAE;EACtC,IAAI,OAAOS,CAAC,KAAK,UAAU,EAAE;IACzB,MAAMZ,aAAa,CAACS,SAAS,EAAE,mBAAmB,EAAEN,IAAI,CAAC;EAC7D;EACA,OAAOS,CAAC;AACZ;AAEA,MAAM0E,kBAAkB,GACpBxB,MAAM,CAACyB,wBAAwB,CAACC,WAAW,CAACC,SAAS,EAAE,YAAY,CAAC,CAACC,GAAG;AAC5E,MAAMC,mBAAmB,GACrB7B,MAAM,CAACyB,wBAAwB,CAACK,iBAAiB,CAACH,SAAS,EAAE,YAAY,CAAC,CAACC,GAAG;AAElF,SAASG,sBAAsBA,CAACjF,CAAC,EAAE;EAC/B,IAAI;IACA;IACA;IACA0E,kBAAkB,CAACQ,IAAI,CAAClF,CAAC,CAAC;IAE1B,OAAO,IAAI;EACf,CAAC,CAAC,MAAM;IACJ,OAAO,KAAK;EAChB;AACJ;AAEA,SAASmF,mBAAmBA,CAACnF,CAAC,EAAE;EAC5B,IAAI;IACA+E,mBAAmB,CAACG,IAAI,CAAClF,CAAC,CAAC;IAC3B,OAAO,IAAI;EACf,CAAC,CAAC,MAAM;IACJ,OAAO,KAAK;EAChB;AACJ;AAEA,SAASoF,qBAAqBA,CAACpF,CAAC,EAAE;EAC9B,IAAI;IACA;IACA,IAAIqF,UAAU,CAACrF,CAAC,CAAC;IACjB,OAAO,KAAK;EAChB,CAAC,CAAC,MAAM;IACJ,OAAO,IAAI;EACf;AACJ;AAEAuC,OAAO,CAACqC,WAAW,GAAG,CAAC5E,CAAC,EAAET,IAAI,GAAG,CAAC,CAAC,KAAK;EACpC,IAAI,CAAC0F,sBAAsB,CAACjF,CAAC,CAAC,EAAE;IAC5B,IAAIT,IAAI,CAAC+F,WAAW,IAAI,CAACH,mBAAmB,CAACnF,CAAC,CAAC,EAAE;MAC7C,MAAMZ,aAAa,CAACS,SAAS,EAAE,4CAA4C,EAAEN,IAAI,CAAC;IACtF;IACA,MAAMH,aAAa,CAACS,SAAS,EAAE,uBAAuB,EAAEN,IAAI,CAAC;EACjE;EACA,IAAI6F,qBAAqB,CAACpF,CAAC,CAAC,EAAE;IAC1B,MAAMZ,aAAa,CAACS,SAAS,EAAE,2BAA2B,EAAEN,IAAI,CAAC;EACrE;EAEA,OAAOS,CAAC;AACZ,CAAC;AAED,MAAMuF,kBAAkB,GACpBrC,MAAM,CAACyB,wBAAwB,CAACa,QAAQ,CAACX,SAAS,EAAE,YAAY,CAAC,CAACC,GAAG;AACzEvC,OAAO,CAACiD,QAAQ,GAAG,CAACxF,CAAC,EAAET,IAAI,GAAG,CAAC,CAAC,KAAK;EACjC,IAAI;IACAgG,kBAAkB,CAACL,IAAI,CAAClF,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOyF,CAAC,EAAE;IACR,MAAMrG,aAAa,CAACS,SAAS,EAAE,mBAAmB,EAAEN,IAAI,CAAC;EAC7D;EAEA,IAAI,CAACA,IAAI,CAAC+F,WAAW,IAAIH,mBAAmB,CAACnF,CAAC,CAAC0F,MAAM,CAAC,EAAE;IACpD,MAAMtG,aAAa,CAACS,SAAS,EAAE,wDAAwD,EAAEN,IAAI,CAAC;EAClG;EACA,IAAI6F,qBAAqB,CAACpF,CAAC,CAAC0F,MAAM,CAAC,EAAE;IACjC,MAAMtG,aAAa,CAACS,SAAS,EAAE,qCAAqC,EAAEN,IAAI,CAAC;EAC/E;EAEA,OAAOS,CAAC;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAM2F,oBAAoB,GAAGzC,MAAM,CAACyB,wBAAwB,CACxDzB,MAAM,CAAC0C,cAAc,CAACP,UAAU,CAAC,CAACR,SAAS,EAC3CgB,MAAM,CAACC,WACX,CAAC,CAAChB,GAAG;AACL,CACIiB,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEZ,UAAU,EAC7Ca,WAAW,EAAEC,WAAW,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,YAAY,CAC1E,CAACC,OAAO,CAACC,IAAI,IAAI;EACd,MAAM/G,IAAI,GAAG+G,IAAI,CAAC/G,IAAI;EACtB,MAAMgH,OAAO,GAAG,UAAU,CAACC,IAAI,CAACjH,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG;EAClD8C,OAAO,CAAC9C,IAAI,CAAC,GAAG,CAACO,CAAC,EAAET,IAAI,GAAG,CAAC,CAAC,KAAK;IAC9B,IAAI,CAACqF,WAAW,CAAC+B,MAAM,CAAC3G,CAAC,CAAC,IAAI2F,oBAAoB,CAACT,IAAI,CAAClF,CAAC,CAAC,KAAKP,IAAI,EAAE;MACjE,MAAML,aAAa,CAACS,SAAS,EAAG,UAAS4G,OAAQ,IAAGhH,IAAK,SAAQ,EAAEF,IAAI,CAAC;IAC5E;IACA,IAAI,CAACA,IAAI,CAAC+F,WAAW,IAAIH,mBAAmB,CAACnF,CAAC,CAAC0F,MAAM,CAAC,EAAE;MACpD,MAAMtG,aAAa,CAACS,SAAS,EAAE,wDAAwD,EAAEN,IAAI,CAAC;IAClG;IACA,IAAI6F,qBAAqB,CAACpF,CAAC,CAAC0F,MAAM,CAAC,EAAE;MACjC,MAAMtG,aAAa,CAACS,SAAS,EAAE,qCAAqC,EAAEN,IAAI,CAAC;IAC/E;IAEA,OAAOS,CAAC;EACZ,CAAC;AACL,CAAC,CAAC;;AAEF;;AAEAuC,OAAO,CAACqE,eAAe,GAAG,CAAC5G,CAAC,EAAET,IAAI,GAAG,CAAC,CAAC,KAAK;EACxC,IAAI,CAACqF,WAAW,CAAC+B,MAAM,CAAC3G,CAAC,CAAC,EAAE;IACxB,MAAMZ,aAAa,CAACS,SAAS,EAAE,sDAAsD,EAAEN,IAAI,CAAC;EAChG;EAEA,IAAI,CAACA,IAAI,CAAC+F,WAAW,IAAIH,mBAAmB,CAACnF,CAAC,CAAC0F,MAAM,CAAC,EAAE;IACpD,MAAMtG,aAAa,CAACS,SAAS,EAAE,wDAAwD,EAAEN,IAAI,CAAC;EAClG;EAEA,IAAI6F,qBAAqB,CAACpF,CAAC,CAAC0F,MAAM,CAAC,EAAE;IACjC,MAAMtG,aAAa,CAACS,SAAS,EAAE,qCAAqC,EAAEN,IAAI,CAAC;EAC/E;EACA,OAAOS,CAAC;AACZ,CAAC;AAEDuC,OAAO,CAACsE,YAAY,GAAG,CAAC7G,CAAC,EAAET,IAAI,GAAG,CAAC,CAAC,KAAK;EACrC,IAAIqF,WAAW,CAAC+B,MAAM,CAAC3G,CAAC,CAAC,EAAE;IACvB,IAAI,CAACT,IAAI,CAAC+F,WAAW,IAAIH,mBAAmB,CAACnF,CAAC,CAAC0F,MAAM,CAAC,EAAE;MACpD,MAAMtG,aAAa,CAACS,SAAS,EAAE,wDAAwD,EAAEN,IAAI,CAAC;IAClG;IAEA,IAAI6F,qBAAqB,CAACpF,CAAC,CAAC0F,MAAM,CAAC,EAAE;MACjC,MAAMtG,aAAa,CAACS,SAAS,EAAE,qCAAqC,EAAEN,IAAI,CAAC;IAC/E;IACA,OAAOS,CAAC;EACZ;EAEA,IAAI,CAACT,IAAI,CAAC+F,WAAW,IAAI,CAACL,sBAAsB,CAACjF,CAAC,CAAC,EAAE;IACjD,MAAMZ,aAAa,CAACS,SAAS,EAAE,wCAAwC,EAAEN,IAAI,CAAC;EAClF;EACA,IAAIA,IAAI,CAAC+F,WAAW,IAAI,CAACH,mBAAmB,CAACnF,CAAC,CAAC,IAAI,CAACiF,sBAAsB,CAACjF,CAAC,CAAC,EAAE;IAC3E,MAAMZ,aAAa,CAACS,SAAS,EAAE,2DAA2D,EAAEN,IAAI,CAAC;EACrG;EACA,IAAI6F,qBAAqB,CAACpF,CAAC,CAAC,EAAE;IAC1B,MAAMZ,aAAa,CAACS,SAAS,EAAE,2BAA2B,EAAEN,IAAI,CAAC;EACrE;EAEA,OAAOS,CAAC;AACZ,CAAC;AAEDuC,OAAO,CAACuE,YAAY,GAAGvE,OAAO,CAAC,oBAAoB,CAAC;AAEpDA,OAAO,CAACwE,QAAQ,GAAGtC,uBAAuB;AAE1ClC,OAAO,CAACyE,YAAY,GAAGvC,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}