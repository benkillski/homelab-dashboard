{"ast":null,"code":"var _jsxFileName = \"D:\\\\benki\\\\Programming\\\\GitHub\\\\homelab-dashboard\\\\client\\\\homelab-dashboard\\\\src\\\\ServicesSection.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Service from \"./Service\";\nimport * as config from \"./config\";\nfunction ServicesSection() {\n  /*\r\n  const [servicesConfig, setServiceConfig] = useState([]);\r\n    useEffect(() => {\r\n        \r\n        config.servicesConfigLoader((error, result) => {\r\n          if(error) {\r\n            console.error(error);\r\n          }\r\n          else {\r\n            setServiceConfig(result.services);\r\n          }\r\n        });\r\n    }, []); // Empty dependency array ensures that the effect runs only once\r\n      Object.values(servicesConfig).forEach(service => {\r\n      console.log(service);\r\n    });\r\n    */\n  const servicesConfig = services => {\n    let content = [];\n    for (let idx in services) {\n      const service = services[idx];\n      content.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }\n      }, item.animal));\n    }\n    return content;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"services-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"services-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, Object.values(servicesConfig).forEach(service => /*#__PURE__*/React.createElement(Service, {\n    serviceURL: `http://${service.ipAddress}:${service.port}`,\n    imgPath: service.logoPath,\n    altText: service.serviceName,\n    serviceName: service.serviceName,\n    ipAddress: service.ipAddress,\n    hostName: service.hostName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }))));\n}\nexport default ServicesSection;","map":{"version":3,"names":["React","useEffect","useState","Service","config","ServicesSection","servicesConfig","services","content","idx","service","push","createElement","key","item","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","animal","Object","values","forEach","serviceURL","ipAddress","port","imgPath","logoPath","altText","serviceName","hostName"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/src/ServicesSection.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Service from \"./Service\";\r\nimport * as config from \"./config\"\r\n\r\nfunction ServicesSection() {\r\n    /*\r\n    const [servicesConfig, setServiceConfig] = useState([]);\r\n\r\n    useEffect(() => {\r\n          \r\n          config.servicesConfigLoader((error, result) => {\r\n            if(error) {\r\n              console.error(error);\r\n            }\r\n            else {\r\n              setServiceConfig(result.services);\r\n            }\r\n          });\r\n      }, []); // Empty dependency array ensures that the effect runs only once\r\n\r\n      Object.values(servicesConfig).forEach(service => {\r\n        console.log(service);\r\n      });\r\n      */\r\n      const servicesConfig = services => {\r\n        let content = [];\r\n        for (let idx in services) {\r\n          const service = services[idx];\r\n          content.push(<li key={item.id}>{item.animal}</li>);\r\n        }\r\n        return content;\r\n      };\r\n\r\n    return (\r\n        <div id=\"services-section\">\r\n            <h2>Services</h2>\r\n            <div id=\"services-container\">\r\n                { Object.values(servicesConfig).forEach(service => (\r\n                    <Service \r\n                        serviceURL={`http://${service.ipAddress}:${service.port}`}\r\n                        imgPath={service.logoPath}\r\n                        altText={service.serviceName}\r\n                        serviceName={service.serviceName}\r\n                        ipAddress={service.ipAddress}\r\n                        hostName={service.hostName}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServicesSection;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,KAAKC,MAAM,MAAM,UAAU;AAElC,SAASC,eAAeA,CAAA,EAAG;EACvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGM,MAAMC,cAAc,GAAGC,QAAQ,IAAI;IACjC,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,GAAG,IAAIF,QAAQ,EAAE;MACxB,MAAMG,OAAO,GAAGH,QAAQ,CAACE,GAAG,CAAC;MAC7BD,OAAO,CAACG,IAAI,eAACX,KAAA,CAAAY,aAAA;QAAIC,GAAG,EAAEC,IAAI,CAACC,EAAG;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEP,IAAI,CAACQ,MAAW,CAAC,CAAC;IACpD;IACA,OAAOd,OAAO;EAChB,CAAC;EAEH,oBACIR,KAAA,CAAAY,aAAA;IAAKG,EAAE,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBrB,KAAA,CAAAY,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBrB,KAAA,CAAAY,aAAA;IAAKG,EAAE,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBE,MAAM,CAACC,MAAM,CAAClB,cAAc,CAAC,CAACmB,OAAO,CAACf,OAAO,iBAC3CV,KAAA,CAAAY,aAAA,CAACT,OAAO;IACJuB,UAAU,EAAG,UAAShB,OAAO,CAACiB,SAAU,IAAGjB,OAAO,CAACkB,IAAK,EAAE;IAC1DC,OAAO,EAAEnB,OAAO,CAACoB,QAAS;IAC1BC,OAAO,EAAErB,OAAO,CAACsB,WAAY;IAC7BA,WAAW,EAAEtB,OAAO,CAACsB,WAAY;IACjCL,SAAS,EAAEjB,OAAO,CAACiB,SAAU;IAC7BM,QAAQ,EAAEvB,OAAO,CAACuB,QAAS;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CACJ,CACA,CACJ,CAAC;AAEd;AAEA,eAAehB,eAAe"},"metadata":{},"sourceType":"module"}