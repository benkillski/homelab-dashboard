{"ast":null,"code":"const dns = require('dns');\nexport function resolveIPV4Address(hostname) {\n  let ipv4Address = \"\";\n  dns.l(hostname, (error, address) => {\n    if (error) {\n      console.error(`Error resolving host ${hostname}: ${error.message}`);\n      return;\n    }\n    if (address.length === 0) {\n      console.error(`No IP addresses found for ${hostname}`);\n      return;\n    }\n    console.log(address);\n    ipv4Address = address.toString();\n  });\n  return ipv4Address;\n}","map":{"version":3,"names":["dns","require","resolveIPV4Address","hostname","ipv4Address","l","error","address","console","message","length","log","toString"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/src/systemNetworking.js"],"sourcesContent":["const dns = require('dns');\r\n\r\nexport function resolveIPV4Address(hostname) {\r\n    let ipv4Address = \"\";\r\n    dns.l(hostname, (error, address) => {\r\n        if (error) {\r\n            console.error(`Error resolving host ${hostname}: ${error.message}`);\r\n            return;\r\n        }\r\n\r\n        if (address.length === 0) {\r\n            console.error(`No IP addresses found for ${hostname}`);\r\n            return;\r\n        }\r\n\r\n        console.log(address);\r\n        ipv4Address = address.toString();\r\n    });\r\n    return ipv4Address;\r\n}"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAE1B,OAAO,SAASC,kBAAkBA,CAACC,QAAQ,EAAE;EACzC,IAAIC,WAAW,GAAG,EAAE;EACpBJ,GAAG,CAACK,CAAC,CAACF,QAAQ,EAAE,CAACG,KAAK,EAAEC,OAAO,KAAK;IAChC,IAAID,KAAK,EAAE;MACPE,OAAO,CAACF,KAAK,CAAE,wBAAuBH,QAAS,KAAIG,KAAK,CAACG,OAAQ,EAAC,CAAC;MACnE;IACJ;IAEA,IAAIF,OAAO,CAACG,MAAM,KAAK,CAAC,EAAE;MACtBF,OAAO,CAACF,KAAK,CAAE,6BAA4BH,QAAS,EAAC,CAAC;MACtD;IACJ;IAEAK,OAAO,CAACG,GAAG,CAACJ,OAAO,CAAC;IACpBH,WAAW,GAAGG,OAAO,CAACK,QAAQ,CAAC,CAAC;EACpC,CAAC,CAAC;EACF,OAAOR,WAAW;AACtB"},"metadata":{},"sourceType":"module"}