{"ast":null,"code":"var _jsxFileName = \"D:\\\\benki\\\\Programming\\\\GitHub\\\\homelab-dashboard\\\\client\\\\homelab-dashboard\\\\src\\\\ServicesSection.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Service from \"./Service\";\nimport * as config from \"./config\";\nfunction ServicesSection() {\n  const [servicesConfig, setServiceConfig] = useState([]);\n  useEffect(() => {\n    config.servicesConfigLoader((error, result) => {\n      if (error) {\n        console.error(error);\n      } else {\n        setServiceConfig(result.services);\n      }\n    });\n  }, []); // Empty dependency array ensures that the effect runs only once\n\n  Object.values(servicesConfig).forEach(service => {\n    console.log(service);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"services-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"services-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, Object.values(servicesConfig).map(service => /*#__PURE__*/React.createElement(Service, {\n    key: service.hostName,\n    serviceURL: `http://${service.ipAddress}:${service.port}`,\n    imgPath: service.logoPath,\n    altText: service.serviceName,\n    serviceName: service.serviceName,\n    ipAddress: service.ipAddress,\n    hostName: service.hostname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }))));\n}\nexport default ServicesSection;","map":{"version":3,"names":["React","useEffect","useState","Service","config","ServicesSection","servicesConfig","setServiceConfig","servicesConfigLoader","error","result","console","services","Object","values","forEach","service","log","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","hostName","serviceURL","ipAddress","port","imgPath","logoPath","altText","serviceName","hostname"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/src/ServicesSection.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Service from \"./Service\";\r\nimport * as config from \"./config\"\r\n\r\nfunction ServicesSection() {\r\n    const [servicesConfig, setServiceConfig] = useState([]);\r\n\r\n    useEffect(() => {\r\n          \r\n          config.servicesConfigLoader((error, result) => {\r\n            if(error) {\r\n              console.error(error);\r\n            }\r\n            else {\r\n              setServiceConfig(result.services);\r\n            }\r\n          });\r\n      }, []); // Empty dependency array ensures that the effect runs only once\r\n\r\n      Object.values(servicesConfig).forEach(service => {\r\n        console.log(service);\r\n      });\r\n\r\n    return (\r\n        <div id=\"services-section\">\r\n            <h2>Services</h2>\r\n            <div id=\"services-container\">\r\n                { Object.values(servicesConfig).map(service => (\r\n                    <Service \r\n                        key={service.hostName}\r\n                        serviceURL={`http://${service.ipAddress}:${service.port}`}\r\n                        imgPath={service.logoPath}\r\n                        altText={service.serviceName}\r\n                        serviceName={service.serviceName}\r\n                        ipAddress={service.ipAddress}\r\n                        hostName={service.hostname}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServicesSection;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,KAAKC,MAAM,MAAM,UAAU;AAElC,SAASC,eAAeA,CAAA,EAAG;EACvB,MAAM,CAACC,cAAc,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEvDD,SAAS,CAAC,MAAM;IAEVG,MAAM,CAACI,oBAAoB,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7C,IAAGD,KAAK,EAAE;QACRE,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,MACI;QACHF,gBAAgB,CAACG,MAAM,CAACE,QAAQ,CAAC;MACnC;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERC,MAAM,CAACC,MAAM,CAACR,cAAc,CAAC,CAACS,OAAO,CAACC,OAAO,IAAI;IAC/CL,OAAO,CAACM,GAAG,CAACD,OAAO,CAAC;EACtB,CAAC,CAAC;EAEJ,oBACIhB,KAAA,CAAAkB,aAAA;IAAKC,EAAE,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBzB,KAAA,CAAAkB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBzB,KAAA,CAAAkB,aAAA;IAAKC,EAAE,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBZ,MAAM,CAACC,MAAM,CAACR,cAAc,CAAC,CAACoB,GAAG,CAACV,OAAO,iBACvChB,KAAA,CAAAkB,aAAA,CAACf,OAAO;IACJwB,GAAG,EAAEX,OAAO,CAACY,QAAS;IACtBC,UAAU,EAAG,UAASb,OAAO,CAACc,SAAU,IAAGd,OAAO,CAACe,IAAK,EAAE;IAC1DC,OAAO,EAAEhB,OAAO,CAACiB,QAAS;IAC1BC,OAAO,EAAElB,OAAO,CAACmB,WAAY;IAC7BA,WAAW,EAAEnB,OAAO,CAACmB,WAAY;IACjCL,SAAS,EAAEd,OAAO,CAACc,SAAU;IAC7BF,QAAQ,EAAEZ,OAAO,CAACoB,QAAS;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CACJ,CACA,CACJ,CAAC;AAEd;AAEA,eAAepB,eAAe"},"metadata":{},"sourceType":"module"}