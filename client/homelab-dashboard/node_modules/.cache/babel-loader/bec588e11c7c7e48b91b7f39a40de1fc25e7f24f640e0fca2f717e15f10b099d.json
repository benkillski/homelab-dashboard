{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst EventModifierInit = require(\"./EventModifierInit.js\");\nexports._convertInherit = (obj, ret, {\n  context = \"The provided value\"\n} = {}) => {\n  EventModifierInit._convertInherit(obj, ret, {\n    context\n  });\n  {\n    const key = \"changedTouches\";\n    let value = obj === undefined || obj === null ? undefined : obj[key];\n    if (value !== undefined) {\n      if (!utils.isObject(value)) {\n        throw new TypeError(context + \" has member 'changedTouches' that\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = value;\n        for (let nextItem of tmp) {\n          nextItem = utils.tryImplForWrapper(nextItem);\n          V.push(nextItem);\n        }\n        value = V;\n      }\n      ret[key] = value;\n    } else {\n      ret[key] = [];\n    }\n  }\n  {\n    const key = \"targetTouches\";\n    let value = obj === undefined || obj === null ? undefined : obj[key];\n    if (value !== undefined) {\n      if (!utils.isObject(value)) {\n        throw new TypeError(context + \" has member 'targetTouches' that\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = value;\n        for (let nextItem of tmp) {\n          nextItem = utils.tryImplForWrapper(nextItem);\n          V.push(nextItem);\n        }\n        value = V;\n      }\n      ret[key] = value;\n    } else {\n      ret[key] = [];\n    }\n  }\n  {\n    const key = \"touches\";\n    let value = obj === undefined || obj === null ? undefined : obj[key];\n    if (value !== undefined) {\n      if (!utils.isObject(value)) {\n        throw new TypeError(context + \" has member 'touches' that\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = value;\n        for (let nextItem of tmp) {\n          nextItem = utils.tryImplForWrapper(nextItem);\n          V.push(nextItem);\n        }\n        value = V;\n      }\n      ret[key] = value;\n    } else {\n      ret[key] = [];\n    }\n  }\n};\nexports.convert = function convert(obj, {\n  context = \"The provided value\"\n} = {}) {\n  if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n    throw new TypeError(`${context} is not an object.`);\n  }\n  const ret = Object.create(null);\n  exports._convertInherit(obj, ret, {\n    context\n  });\n  return ret;\n};","map":{"version":3,"names":["conversions","require","utils","EventModifierInit","exports","_convertInherit","obj","ret","context","key","value","undefined","isObject","TypeError","V","tmp","nextItem","tryImplForWrapper","push","convert","Object","create"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/jsdom/lib/jsdom/living/generated/TouchEventInit.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst EventModifierInit = require(\"./EventModifierInit.js\");\n\nexports._convertInherit = (obj, ret, { context = \"The provided value\" } = {}) => {\n  EventModifierInit._convertInherit(obj, ret, { context });\n\n  {\n    const key = \"changedTouches\";\n    let value = obj === undefined || obj === null ? undefined : obj[key];\n    if (value !== undefined) {\n      if (!utils.isObject(value)) {\n        throw new TypeError(context + \" has member 'changedTouches' that\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = value;\n        for (let nextItem of tmp) {\n          nextItem = utils.tryImplForWrapper(nextItem);\n\n          V.push(nextItem);\n        }\n        value = V;\n      }\n\n      ret[key] = value;\n    } else {\n      ret[key] = [];\n    }\n  }\n\n  {\n    const key = \"targetTouches\";\n    let value = obj === undefined || obj === null ? undefined : obj[key];\n    if (value !== undefined) {\n      if (!utils.isObject(value)) {\n        throw new TypeError(context + \" has member 'targetTouches' that\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = value;\n        for (let nextItem of tmp) {\n          nextItem = utils.tryImplForWrapper(nextItem);\n\n          V.push(nextItem);\n        }\n        value = V;\n      }\n\n      ret[key] = value;\n    } else {\n      ret[key] = [];\n    }\n  }\n\n  {\n    const key = \"touches\";\n    let value = obj === undefined || obj === null ? undefined : obj[key];\n    if (value !== undefined) {\n      if (!utils.isObject(value)) {\n        throw new TypeError(context + \" has member 'touches' that\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = value;\n        for (let nextItem of tmp) {\n          nextItem = utils.tryImplForWrapper(nextItem);\n\n          V.push(nextItem);\n        }\n        value = V;\n      }\n\n      ret[key] = value;\n    } else {\n      ret[key] = [];\n    }\n  }\n};\n\nexports.convert = function convert(obj, { context = \"The provided value\" } = {}) {\n  if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n    throw new TypeError(`${context} is not an object.`);\n  }\n\n  const ret = Object.create(null);\n  exports._convertInherit(obj, ret, { context });\n  return ret;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}