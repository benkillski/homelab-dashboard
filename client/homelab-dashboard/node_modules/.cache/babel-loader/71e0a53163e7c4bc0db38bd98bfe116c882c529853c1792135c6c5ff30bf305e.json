{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable no-new-func */\nconst acorn = require(\"acorn\");\nconst findGlobals = require(\"acorn-globals\");\nconst escodegen = require(\"escodegen\");\nconst jsGlobals = require(\"./browser/js-globals.json\");\n\n// We can't use the default browserify vm shim because it doesn't work in a web worker.\n\n// \"eval\" is skipped because it's set to a function that calls `runInContext`:\nconst jsGlobalEntriesToInstall = Object.entries(jsGlobals).filter(([name]) => name !== \"eval\" && name in global);\nexports.createContext = function (sandbox) {\n  // TODO: This should probably use a symbol\n  Object.defineProperty(sandbox, \"__isVMShimContext\", {\n    value: true,\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n  for (const [globalName, globalPropDesc] of jsGlobalEntriesToInstall) {\n    const propDesc = {\n      ...globalPropDesc,\n      value: global[globalName]\n    };\n    Object.defineProperty(sandbox, globalName, propDesc);\n  }\n  Object.defineProperty(sandbox, \"eval\", {\n    value(code) {\n      return exports.runInContext(code, sandbox);\n    },\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n};\nexports.isContext = function (sandbox) {\n  return sandbox.__isVMShimContext;\n};\nexports.runInContext = function (code, contextifiedSandbox, options) {\n  if (code === \"this\") {\n    // Special case for during window creation.\n    return contextifiedSandbox;\n  }\n  if (options === undefined) {\n    options = {};\n  }\n  const comments = [];\n  const tokens = [];\n  const ast = acorn.parse(code, {\n    allowReturnOutsideFunction: true,\n    ranges: true,\n    // collect comments in Esprima's format\n    onComment: comments,\n    // collect token ranges\n    onToken: tokens\n  });\n\n  // make sure we keep comments\n  escodegen.attachComments(ast, comments, tokens);\n  const globals = findGlobals(ast);\n  for (let i = 0; i < globals.length; ++i) {\n    if (globals[i].name === \"window\" || globals[i].name === \"this\") {\n      continue;\n    }\n    const {\n      nodes\n    } = globals[i];\n    for (let j = 0; j < nodes.length; ++j) {\n      const {\n        type,\n        name\n      } = nodes[j];\n      nodes[j].type = \"MemberExpression\";\n      nodes[j].property = {\n        name,\n        type\n      };\n      nodes[j].computed = false;\n      nodes[j].object = {\n        name: \"window\",\n        type: \"Identifier\"\n      };\n    }\n  }\n  const lastNode = ast.body[ast.body.length - 1];\n  if (lastNode.type === \"ExpressionStatement\") {\n    lastNode.type = \"ReturnStatement\";\n    lastNode.argument = lastNode.expression;\n    delete lastNode.expression;\n  }\n  const rewrittenCode = escodegen.generate(ast, {\n    comment: true\n  });\n  const suffix = options.filename !== undefined ? \"\\n//# sourceURL=\" + options.filename : \"\";\n  return Function(\"window\", rewrittenCode + suffix).bind(contextifiedSandbox)(contextifiedSandbox);\n};\nexports.Script = class VMShimScript {\n  constructor(code, options) {\n    this._code = code;\n    this._options = options;\n  }\n  runInContext(sandbox, options) {\n    return exports.runInContext(this._code, sandbox, {\n      ...this._options,\n      ...options\n    });\n  }\n};","map":{"version":3,"names":["acorn","require","findGlobals","escodegen","jsGlobals","jsGlobalEntriesToInstall","Object","entries","filter","name","global","exports","createContext","sandbox","defineProperty","value","writable","configurable","enumerable","globalName","globalPropDesc","propDesc","code","runInContext","isContext","__isVMShimContext","contextifiedSandbox","options","undefined","comments","tokens","ast","parse","allowReturnOutsideFunction","ranges","onComment","onToken","attachComments","globals","i","length","nodes","j","type","property","computed","object","lastNode","body","argument","expression","rewrittenCode","generate","comment","suffix","filename","Function","bind","Script","VMShimScript","constructor","_code","_options"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/jsdom/lib/jsdom/vm-shim.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable no-new-func */\nconst acorn = require(\"acorn\");\nconst findGlobals = require(\"acorn-globals\");\nconst escodegen = require(\"escodegen\");\nconst jsGlobals = require(\"./browser/js-globals.json\");\n\n// We can't use the default browserify vm shim because it doesn't work in a web worker.\n\n// \"eval\" is skipped because it's set to a function that calls `runInContext`:\nconst jsGlobalEntriesToInstall = Object.entries(jsGlobals).filter(([name]) => name !== \"eval\" && name in global);\n\nexports.createContext = function (sandbox) {\n  // TODO: This should probably use a symbol\n  Object.defineProperty(sandbox, \"__isVMShimContext\", {\n    value: true,\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n\n  for (const [globalName, globalPropDesc] of jsGlobalEntriesToInstall) {\n    const propDesc = { ...globalPropDesc, value: global[globalName] };\n    Object.defineProperty(sandbox, globalName, propDesc);\n  }\n\n  Object.defineProperty(sandbox, \"eval\", {\n    value(code) {\n      return exports.runInContext(code, sandbox);\n    },\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n};\n\nexports.isContext = function (sandbox) {\n  return sandbox.__isVMShimContext;\n};\n\nexports.runInContext = function (code, contextifiedSandbox, options) {\n  if (code === \"this\") {\n    // Special case for during window creation.\n    return contextifiedSandbox;\n  }\n\n  if (options === undefined) {\n    options = {};\n  }\n\n  const comments = [];\n  const tokens = [];\n  const ast = acorn.parse(code, {\n    allowReturnOutsideFunction: true,\n    ranges: true,\n    // collect comments in Esprima's format\n    onComment: comments,\n    // collect token ranges\n    onToken: tokens\n  });\n\n  // make sure we keep comments\n  escodegen.attachComments(ast, comments, tokens);\n\n  const globals = findGlobals(ast);\n  for (let i = 0; i < globals.length; ++i) {\n    if (globals[i].name === \"window\" || globals[i].name === \"this\") {\n      continue;\n    }\n\n    const { nodes } = globals[i];\n    for (let j = 0; j < nodes.length; ++j) {\n      const { type, name } = nodes[j];\n      nodes[j].type = \"MemberExpression\";\n      nodes[j].property = { name, type };\n      nodes[j].computed = false;\n      nodes[j].object = {\n        name: \"window\",\n        type: \"Identifier\"\n      };\n    }\n  }\n\n  const lastNode = ast.body[ast.body.length - 1];\n  if (lastNode.type === \"ExpressionStatement\") {\n    lastNode.type = \"ReturnStatement\";\n    lastNode.argument = lastNode.expression;\n    delete lastNode.expression;\n  }\n\n  const rewrittenCode = escodegen.generate(ast, { comment: true });\n  const suffix = options.filename !== undefined ? \"\\n//# sourceURL=\" + options.filename : \"\";\n\n  return Function(\"window\", rewrittenCode + suffix).bind(contextifiedSandbox)(contextifiedSandbox);\n};\n\nexports.Script = class VMShimScript {\n  constructor(code, options) {\n    this._code = code;\n    this._options = options;\n  }\n\n  runInContext(sandbox, options) {\n    return exports.runInContext(this._code, sandbox, { ...this._options, ...options });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}