{"ast":null,"code":"var _jsxFileName = \"D:\\\\benki\\\\Programming\\\\GitHub\\\\homelab-dashboard\\\\client\\\\homelab-dashboard\\\\src\\\\ServicesSection.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Service from \"./Service\";\nimport * as config from \"./config\";\nfunction ServicesSection() {\n  /*  const [servicesConfig, setServiceConfig] = useState([]);\r\n      useEffect(() => {\r\n          \r\n          config.servicesConfigLoader((error, result) => {\r\n            if(error) {\r\n              console.error(error);\r\n            }\r\n            else {\r\n              setServiceConfig(result.services);\r\n            }\r\n          });\r\n      }, []); // Empty dependency array ensures that the effect runs only once\r\n        Object.values(servicesConfig).forEach(service => {\r\n        console.log(service);\r\n      });\r\n      */\n\n  config.servicesConfigLoader((error, result) => {\n    if (error) {\n      console.error(error);\n    } else {\n      setServiceConfig(result.services);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"services-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"services-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, Object.values(servicesConfig).forEach(service => /*#__PURE__*/React.createElement(Service, {\n    serviceURL: `http://${service.ipAddress}:${service.port}`,\n    imgPath: service.logoPath,\n    altText: service.serviceName,\n    serviceName: service.serviceName,\n    ipAddress: service.ipAddress,\n    hostName: service.hostName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }))));\n}\nexport default ServicesSection;","map":{"version":3,"names":["React","useEffect","useState","Service","config","ServicesSection","servicesConfigLoader","error","result","console","setServiceConfig","services","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","servicesConfig","forEach","service","serviceURL","ipAddress","port","imgPath","logoPath","altText","serviceName","hostName"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/src/ServicesSection.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Service from \"./Service\";\r\nimport * as config from \"./config\"\r\n\r\nfunction ServicesSection() {\r\n  /*  const [servicesConfig, setServiceConfig] = useState([]);\r\n\r\n    useEffect(() => {\r\n          \r\n          config.servicesConfigLoader((error, result) => {\r\n            if(error) {\r\n              console.error(error);\r\n            }\r\n            else {\r\n              setServiceConfig(result.services);\r\n            }\r\n          });\r\n      }, []); // Empty dependency array ensures that the effect runs only once\r\n\r\n      Object.values(servicesConfig).forEach(service => {\r\n        console.log(service);\r\n      });\r\n      */\r\n\r\n\r\nconfig.servicesConfigLoader((error, result) => {\r\n            if(error) {\r\n              console.error(error);\r\n            }\r\n            else {\r\n              setServiceConfig(result.services);\r\n            }\r\n          });\r\n    return (\r\n        <div id=\"services-section\">\r\n            <h2>Services</h2>\r\n            <div id=\"services-container\">\r\n                { Object.values(servicesConfig).forEach(service => (\r\n                    <Service \r\n                        serviceURL={`http://${service.ipAddress}:${service.port}`}\r\n                        imgPath={service.logoPath}\r\n                        altText={service.serviceName}\r\n                        serviceName={service.serviceName}\r\n                        ipAddress={service.ipAddress}\r\n                        hostName={service.hostName}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServicesSection;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,KAAKC,MAAM,MAAM,UAAU;AAElC,SAASC,eAAeA,CAAA,EAAG;EACzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKAD,MAAM,CAACE,oBAAoB,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;IACnC,IAAGD,KAAK,EAAE;MACRE,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,MACI;MACHG,gBAAgB,CAACF,MAAM,CAACG,QAAQ,CAAC;IACnC;EACF,CAAC,CAAC;EACR,oBACIX,KAAA,CAAAY,aAAA;IAAKC,EAAE,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBnB,KAAA,CAAAY,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBnB,KAAA,CAAAY,aAAA;IAAKC,EAAE,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBC,MAAM,CAACC,MAAM,CAACC,cAAc,CAAC,CAACC,OAAO,CAACC,OAAO,iBAC3CxB,KAAA,CAAAY,aAAA,CAACT,OAAO;IACJsB,UAAU,EAAG,UAASD,OAAO,CAACE,SAAU,IAAGF,OAAO,CAACG,IAAK,EAAE;IAC1DC,OAAO,EAAEJ,OAAO,CAACK,QAAS;IAC1BC,OAAO,EAAEN,OAAO,CAACO,WAAY;IAC7BA,WAAW,EAAEP,OAAO,CAACO,WAAY;IACjCL,SAAS,EAAEF,OAAO,CAACE,SAAU;IAC7BM,QAAQ,EAAER,OAAO,CAACQ,QAAS;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CACJ,CACA,CACJ,CAAC;AAEd;AAEA,eAAed,eAAe"},"metadata":{},"sourceType":"module"}