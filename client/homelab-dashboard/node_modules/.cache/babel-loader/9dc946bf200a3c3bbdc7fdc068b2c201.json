{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport Service from \"./Service\";\nimport * as config from \"./config\";\nfunction ServicesSection() {\n  const [servicesConfig, setServiceConfig] = useState([]);\n  useEffect(() => {\n    config.servicesConfigLoader((error, result) => {\n      if (error) {\n        console.error(error);\n      } else {\n        setServiceConfig(result.services);\n      }\n    });\n  }, []); // Empty dependency array ensures that the effect runs only once\n}\nexport default ServicesSection;","map":{"version":3,"names":["React","useEffect","useState","Service","config","ServicesSection","servicesConfig","setServiceConfig","servicesConfigLoader","error","result","console","services"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/src/ServicesSection.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Service from \"./Service\";\r\nimport * as config from \"./config\"\r\n\r\nfunction ServicesSection() {\r\n    const [servicesConfig, setServiceConfig] = useState([]);\r\n\r\n    useEffect(() => {\r\n          \r\n          config.servicesConfigLoader((error, result) => {\r\n            if(error) {\r\n              console.error(error);\r\n            }\r\n            else {\r\n              setServiceConfig(result.services);\r\n            }\r\n          });\r\n      }, []); // Empty dependency array ensures that the effect runs only once\r\n}\r\n\r\nexport default ServicesSection;"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,KAAKC,MAAM,MAAM,UAAU;AAElC,SAASC,eAAeA,CAAA,EAAG;EACvB,MAAM,CAACC,cAAc,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEvDD,SAAS,CAAC,MAAM;IAEVG,MAAM,CAACI,oBAAoB,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7C,IAAGD,KAAK,EAAE;QACRE,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,MACI;QACHF,gBAAgB,CAACG,MAAM,CAACE,QAAQ,CAAC;MACnC;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACd;AAEA,eAAeP,eAAe"},"metadata":{},"sourceType":"module"}