{"ast":null,"code":"/*!\n * Copyright (c) 2018, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n\nconst psl = require(\"psl\");\n\n// RFC 6761\nconst SPECIAL_USE_DOMAINS = [\"local\", \"example\", \"invalid\", \"localhost\", \"test\"];\nconst SPECIAL_TREATMENT_DOMAINS = [\"localhost\", \"invalid\"];\nfunction getPublicSuffix(domain, options = {}) {\n  const domainParts = domain.split(\".\");\n  const topLevelDomain = domainParts[domainParts.length - 1];\n  const allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n  const ignoreError = !!options.ignoreError;\n  if (allowSpecialUseDomain && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    if (domainParts.length > 1) {\n      const secondLevelDomain = domainParts[domainParts.length - 2];\n      // In aforementioned example, the eTLD/pubSuf will be apple.localhost\n      return `${secondLevelDomain}.${topLevelDomain}`;\n    } else if (SPECIAL_TREATMENT_DOMAINS.includes(topLevelDomain)) {\n      // For a single word special use domain, e.g. 'localhost' or 'invalid', per RFC 6761,\n      // \"Application software MAY recognize {localhost/invalid} names as special, or\n      // MAY pass them to name resolution APIs as they would for other domain names.\"\n      return `${topLevelDomain}`;\n    }\n  }\n  if (!ignoreError && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    throw new Error(`Cookie has domain set to the public suffix \"${topLevelDomain}\" which is a special use domain. To allow this, configure your CookieJar with {allowSpecialUseDomain:true, rejectPublicSuffixes: false}.`);\n  }\n  return psl.get(domain);\n}\nexports.getPublicSuffix = getPublicSuffix;","map":{"version":3,"names":["psl","require","SPECIAL_USE_DOMAINS","SPECIAL_TREATMENT_DOMAINS","getPublicSuffix","domain","options","domainParts","split","topLevelDomain","length","allowSpecialUseDomain","ignoreError","includes","secondLevelDomain","Error","get","exports"],"sources":["D:/benki/Programming/GitHub/homelab-dashboard/client/homelab-dashboard/node_modules/tough-cookie/lib/pubsuffix-psl.js"],"sourcesContent":["/*!\n * Copyright (c) 2018, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst psl = require(\"psl\");\n\n// RFC 6761\nconst SPECIAL_USE_DOMAINS = [\n  \"local\",\n  \"example\",\n  \"invalid\",\n  \"localhost\",\n  \"test\"\n];\n\nconst SPECIAL_TREATMENT_DOMAINS = [\"localhost\", \"invalid\"];\n\nfunction getPublicSuffix(domain, options = {}) {\n  const domainParts = domain.split(\".\");\n  const topLevelDomain = domainParts[domainParts.length - 1];\n  const allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n  const ignoreError = !!options.ignoreError;\n\n  if (allowSpecialUseDomain && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    if (domainParts.length > 1) {\n      const secondLevelDomain = domainParts[domainParts.length - 2];\n      // In aforementioned example, the eTLD/pubSuf will be apple.localhost\n      return `${secondLevelDomain}.${topLevelDomain}`;\n    } else if (SPECIAL_TREATMENT_DOMAINS.includes(topLevelDomain)) {\n      // For a single word special use domain, e.g. 'localhost' or 'invalid', per RFC 6761,\n      // \"Application software MAY recognize {localhost/invalid} names as special, or\n      // MAY pass them to name resolution APIs as they would for other domain names.\"\n      return `${topLevelDomain}`;\n    }\n  }\n\n  if (!ignoreError && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    throw new Error(\n      `Cookie has domain set to the public suffix \"${topLevelDomain}\" which is a special use domain. To allow this, configure your CookieJar with {allowSpecialUseDomain:true, rejectPublicSuffixes: false}.`\n    );\n  }\n\n  return psl.get(domain);\n}\n\nexports.getPublicSuffix = getPublicSuffix;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AACZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;;AAE1B;AACA,MAAMC,mBAAmB,GAAG,CAC1B,OAAO,EACP,SAAS,EACT,SAAS,EACT,WAAW,EACX,MAAM,CACP;AAED,MAAMC,yBAAyB,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC;AAE1D,SAASC,eAAeA,CAACC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC7C,MAAMC,WAAW,GAAGF,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC;EACrC,MAAMC,cAAc,GAAGF,WAAW,CAACA,WAAW,CAACG,MAAM,GAAG,CAAC,CAAC;EAC1D,MAAMC,qBAAqB,GAAG,CAAC,CAACL,OAAO,CAACK,qBAAqB;EAC7D,MAAMC,WAAW,GAAG,CAAC,CAACN,OAAO,CAACM,WAAW;EAEzC,IAAID,qBAAqB,IAAIT,mBAAmB,CAACW,QAAQ,CAACJ,cAAc,CAAC,EAAE;IACzE,IAAIF,WAAW,CAACG,MAAM,GAAG,CAAC,EAAE;MAC1B,MAAMI,iBAAiB,GAAGP,WAAW,CAACA,WAAW,CAACG,MAAM,GAAG,CAAC,CAAC;MAC7D;MACA,OAAQ,GAAEI,iBAAkB,IAAGL,cAAe,EAAC;IACjD,CAAC,MAAM,IAAIN,yBAAyB,CAACU,QAAQ,CAACJ,cAAc,CAAC,EAAE;MAC7D;MACA;MACA;MACA,OAAQ,GAAEA,cAAe,EAAC;IAC5B;EACF;EAEA,IAAI,CAACG,WAAW,IAAIV,mBAAmB,CAACW,QAAQ,CAACJ,cAAc,CAAC,EAAE;IAChE,MAAM,IAAIM,KAAK,CACZ,+CAA8CN,cAAe,0IAChE,CAAC;EACH;EAEA,OAAOT,GAAG,CAACgB,GAAG,CAACX,MAAM,CAAC;AACxB;AAEAY,OAAO,CAACb,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}